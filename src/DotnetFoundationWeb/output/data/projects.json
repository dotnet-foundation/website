[{"Title":"Akka.NET","Logo":"petabridge_logo.png","Web":"https://petabridge.com","Content":"# Akka.NET\n\n[Akka.NET](https://getakka.net) is a set of open-source libraries for designing scalable, resilient systems that span processor cores and networks. Akka allows you to focus on meeting business needs instead of writing low-level code to provide reliable behavior, fault tolerance, and high performance.\n\n## Project Details\n* [Project Info Site](https://getakka.net/) \n* [Project Code Site](https://github.com/akkadotnet/akka.net)\n* Project License Type: [Apache License 2.0](https://github.com/akkadotnet/akka.net/blob/dev/LICENSE)\n* Project Main Contact: [Aaron Stannard](https://github.com/Aaronontheweb)\n\n## Quicklinks\n\n* [Contribute](https://github.com/akkadotnet/akka.net/blob/dev/CONTRIBUTING.md) \n* [Documentation](https://getakka.net/articles/intro/what-is-akka.html)\n* [Discussions](http://gitter.im/akkadotnet/akka.net)\n* Twitter [@AkkaDotNet](https://twitter.com/AkkaDotNet)\n* StackOverflow Tag: [akka.net](http://stackoverflow.com/questions/tagged/akka.net)"},{"Title":"ASP.NET MVC, Web API and Web Pages (Razor)","Logo":"microsoft.jpg","Web":"http://www.microsoft.com","Content":"# ASP.NET MVC, Web API and Web Pages (Razor)\n\n[ASP.NET](https://asp.net) is a free web framework for building great web sites and applications. The ASP.NET web stack includes ASP.NET MVC 4.0, 5.0, Web API 1.0, 2.0, and Web Pages, 2,0, 3.0 source code. These products are actively developed by the ASP.NET team in collaboration with a community of open source developers. Together we are dedicated to creating the best possible platform for web development.\n\n## Project Details\n* [Project Info Site](https://aspnetwebstack.codeplex.com/) \n* [Project Code Site](https://aspnetwebstack.codeplex.com/SourceControl/latest)\n* Project License Type: [Apache License 2.0](https://aspnetwebstack.codeplex.com/license)\n* Project Main Contact: [Daniel Roth](https://www.codeplex.com/site/users/view/danroth27)\n\n## Quicklinks\n\n* [Contribute](https://aspnetwebstack.codeplex.com/wikipage?title=Contributing) \n* [Documentation](https://aspnetwebstack.codeplex.com/documentation)\n* [Discussions](https://aspnetwebstack.codeplex.com/discussions)\n* [Blog](https://blogs.msdn.com/b/webdev/)"},{"Title":"AngleSharp","Logo":"anglesharp-logo.png","Web":"https://anglesharp.github.io/","Content":"# AngleSharp\n\n[AngleSharp](https://anglesharp.github.io/) is a .NET Browser Engine Core, which represents the basis for modern web tooling available to .NET applications in form of a .NET Standard library. The library contains a fully implemented HTML5 parser and a dynamic DOM implementation that can be traversed using L4 query selectors. AngleSharp fully follows the W3C specification and WHATWG references to ensure a maximum compatibility with evergreen browsers.\n\nAngleSharp\u0027s eco-system also features extension libraries such as an integrated CSS3 parser, XPath support, or an experimental JavaScript engine.\n\nThe long term vision for AngleSharp is provide all the building blocks for downloading, inspecting, running, and rendering standard web assets within .NET applications.\n\n## Project Details\n\n* [Project Info Site](https://anglesharp.github.io)\n* [Project Code Site](https://github.com/AngleSharp)\n* Project License Type: [MIT](https://github.com/AngleSharp/AngleSharp/blob/master/LICENSE)\n* Project Main Contact: [Florian Rappl](https://github.com/FlorianRappl)\n\n## Quicklinks\n\n* [Blog](https://anglesharp.github.io/blog.html)\n* [Issues](https://github.com/AngleSharp/AngleSharp/issues)\n* [Contribute](https://github.com/AngleSharp/AngleSharp/blob/devel/.github/CONTRIBUTING.md)\n* [Documentation](https://anglesharp.github.io/docs.html)\n* [Discussions and Help](https://gitter.im/AngleSharp/AngleSharp)\n* [Florian\u0027s blog](https://florian-rappl.de)\n* Twitter: [@FlorianRappl](https://twitter.com/FlorianRappl)"},{"Title":"ASP.NET SignalR","Logo":"microsoft.jpg","Web":"http://www.microsoft.com","Content":"# ASP.NET SignalR\n\n[ASP.NET SignalR](http://signalr.net/) is a library for ASP.NET developers that makes it incredibly simple to add real-time web functionality to your applications. \n\nWhat is \u0022real-time web\u0022 functionality? It\u0027s the ability to have your server-side code push content to the connected clients as it happens, in real-time. You may have heard of WebSockets, a new HTML5 API that enables bi-directional communication between the browser and server. \n\nSignalR will use WebSockets under the covers when it\u0027s available, and gracefully fallback to other techniques and technologies when it isn\u0027t, while your application code stays the same. SignalR also provides a very simple, high-level API for doing server to client RPC (call JavaScript functions in your clients\u0027 browsers from server-side .NET code) in your ASP.NET application, as well as adding useful hooks for connection management, e.g. connect/disconnect events, grouping connections, authorization.\n\n## Project Details\n*  [Project Info Site](http://signalr.net/)\n*  [Project Code Site](https://github.com/SignalR/SignalR)\n*  Project License Type: [Apache License 2.0](https://github.com/SignalR/SignalR/blob/master/LICENSE.md)\n* Project Main Contact: [Damian Edwards](https://github.com/DamianEdwards)\n\n## Quicklinks\n\n* [Contribute](https://github.com/SignalR/SignalR/blob/master/CONTRIBUTING.md)\n* [Documentation](https://www.asp.net/signalr)\n* [JabbR](http://jabbr.net/#/rooms/signalr) \n* [Forum](https://forums.asp.net/1254.aspx/1?ASP\u002BNET\u002BSignalR)\n* [Blog](https://blogs.msdn.com/b/webdev/)"},{"Title":"ASP.NET Core","Logo":"microsoft.jpg","Web":"http://www.microsoft.com","Content":"# ASP.NET Core\n\n[ASP.NET Core](https://www.asp.net/core) is the next generation of ASP.NET that provides a familiar and modern framework for web and cloud scenarios. It includes the next versions of ASP.NET MVC, Web API, Web Pages and SignalR. It is a high-performance and modular design, and supports full side by side to make it seamless to migrate from on premise to the cloud. These products are actively developed by the ASP.NET team in collaboration with a community of open source developers. Together we are dedicated to creating the best possible platform for web development.\n\n# Project Details\n\n* [Project Info Site](https://www.asp.net/core)\n* [Project Code Site](https://github.com/aspnet/home)\n* [Project Docs Repository](https://github.com/aspnet/Docs)\n* Project License Type: [Apache License 2.0 (Apache)](https://github.com/aspnet/Home/blob/master/LICENSE.txt)\n* Project Main Contact: [Daniel Roth](https://github.com/danroth27)\n\n### Quicklinks\n\n* [Contribute](https://github.com/aspnet/Home/blob/master/CONTRIBUTING.md)\n* [Documentation](https://docs.microsoft.com/aspnet/core)\n* [Discussions](https://github.com/aspnet/Home/issues)\n* [Blog](https://blogs.msdn.com/b/webdev/)"},{"Title":"ASP.NET Ajax Control Toolkit","Logo":"microsoft.jpg","Web":"http://www.microsoft.com","Content":"# ASP.NET Ajax Control Toolkit\n\n[ASP.NET Ajax Control Toolkit](https://github.com/DevExpress/AjaxControlToolkit/) contains a rich set of controls that you can use to build highly responsive and interactive Ajax-enabled Web applications. The Ajax Control Toolkit contains more than 40 controls, including the AutoComplete, CollapsiblePanel, ColorPicker, MaskedEdit, Calendar, Accordion, HTML Editor Extender, and Watermark controls. Using the Ajax Control Toolkit, you can build Ajax-enabled ASP.NET Web Forms applications by dragging-and-dropping Toolkit controls from the Visual Studio Toolbox onto an ASP.NET Web Forms page. [DevExpress](http://devexpress.com/act/) is now [maintaining](https://community.devexpress.com/blogs/aspnet/archive/tags/AJAXControlToolKit/default.aspx) the ASP.NET AJAX Control Toolkit. \n\n# Project Details\n\n* [Project Info Site](http://devexpress.com/act/)\n* [Project Code Site](https://github.com/DevExpress/AjaxControlToolkit/)\n* Project License Type: [New BSD License (BSD)](https://github.com/DevExpress/AjaxControlToolkit/blob/master/LICENSE.txt)\n* Project Main Contact:\u00A0[Mehul Harry](https://github.com/Mehul), [Mikhail Tymchuk](https://github.com/MikhailTymchukDX), [Damian Edwards](https://github.com/DamianEdwards)\n\n### Quicklinks\n\n* [Documentation](https://github.com/DevExpress/AjaxControlToolkit/wiki)\n* [Contribute](https://github.com/DevExpress/AjaxControlToolkit/blob/master/CONTRIBUTING.MD)\n* [Report an issue](https://github.com/DevExpress/AjaxControlToolkit/issues)"},{"Title":"Microsoft Azure SDK for .NET","Logo":"microsoft.jpg","Web":"http://www.microsoft.com","Content":"# Microsoft Azure SDK for .NET\n\nThe [Microsoft Azure SDK for .NET](https://azure.microsoft.com/en-us/develop/net/) allows you to build .NET applications that take advantage of scalable cloud computing resources.\n\n## Project Details\n* [Project Info Site](https://azure.microsoft.com/en-us/develop/net/) \n* [Project Code Site](https://github.com/Azure/azure-sdk-for-net)\n* Project License Type: [Apache License 2.0](https://github.com/Azure/azure-sdk-for-net/blob/master/LICENSE.txt)\n* Project Main Contact: [Brady Gaster](https://github.com/bradygaster)\n\n## Quicklinks\n\n* [Contribute](https://azure.github.io/guidelines.html) \n* [Documentation](https://azure.microsoft.com/en-us/develop/net/)\n* [Discussions](https://github.com/Azure/azure-sdk-for-net/issues)\n* [User Forum](https://social.msdn.microsoft.com/Forums/windowsazure/)"},{"Title":"AutoMapper","Logo":"fc019716-ad57-4172-8679-7b5bfe4c614a.jpg","Web":"http://automapper.org","Content":"# AutoMapper\n\nAutoMapper is a convention-based, object-to-object mapper. It replaces that boring object value copying code that\u0027s both tedious to write and test.\n\nWith straightforward conventions, AutoMapper removes hundreds or thousands of lines of code, enforcing a policy on your DTO design and making it simple to test your mappings.\n\n## Project Details\n\n* [Website](https://automapper.org)\n* [Source](https://github.com/automapper/automapper)\n* License: [MIT](https://github.com/AutoMapper/AutoMapper/blob/master/LICENSE.txt)\n* [NuGet](https://www.nuget.org/packages/AutoMapper)\n* Project Leads: [Jimmy Bogard](https://github.com/jbogard), [Lucian Bargaoanu](https://github.com/lbargaoanu), and [Tyler Carlson](https://github.com/TylerCarlson1)\n\n## Quicklinks\n\n* [Documentation](https://github.com/AutoMapper/AutoMapper/wiki)\n* [Contribute](https://github.com/AutoMapper/AutoMapper/blob/master/CONTRIBUTING.md)"},{"Title":"Cake","Logo":"cake-large.png","Web":"http://cakebuild.net/","Content":"# Cake\n\n[Cake](https://cakebuild.net/) is a cross platform build automation system, \nbuilt on top of Roslyn and the Mono Compiler, which uses C# as the scripting language.\n\n## Project Details\n\n* [Project Info Site](https://cakebuild.net)\n* [Project Code Site](https://github.com/cake-build)\n* Project License Type: [MIT](https://github.com/cake-build/cake/blob/develop/LICENSE)\n* Project Main Contacts: [Patrik Svensson](https://github.com/patriksvensson), [Mattias Karlsson](https://github.com/devlead), [Gary Ewan Park](https://github.com/gep13), [Alistair Chapman](https://github.com/agc93), [Martin Bj\u00F6rkstr\u00F6m](https://github.com/mholo65), [Dave Glick](https://github.com/daveaglick), [Pascal Berger](https://github.com/pascalberger), and , [J\u00E9r\u00E9mie Desautels](https://github.com/jericho).\n\n## Quicklinks\n\n* [Documentation](https://cakebuild.net/docs)\n* [Blog](https://cakebuild.net/blog)\n* [Discussions and Help](https://gitter.im/cake-build/cake)\n* [Twitter](https://twitter.com/cakebuildnet)\n* [Contribute](https://github.com/cake-build/cake/blob/develop/CONTRIBUTING.md)"},{"Title":"BenchmarkDotNet","Logo":"BenchmarkDotNet.png","Web":"http://benchmarkdotnet.org/","Content":"# BenchmarkDotNet\n\n**BenchmarkDotNet** is a powerful .NET library for benchmarking.\n\n**Summary**\n\n* Standard benchmarking routine: generating an isolated project per each benchmark method; auto-selection of iteration amount; warmup; overhead evaluation; statistics calculation; and so on.\n* Supported runtimes: Full .NET Framework, .NET Core (RTM), Mono\n* Supported languages: C#, F#, and Visual Basic\n* Supported OS: Windows, Linux, MacOS\n* Easy way to compare different environments (\u0060x86\u0060 vs \u0060x64\u0060, \u0060LegacyJit\u0060 vs \u0060RyuJit\u0060, and so on; see: [Jobs](https://benchmarkdotnet.org/Configs/Jobs.htm))\n* Reports: markdown, csv, html, plain text, png plots.\n* Advanced features: [Baseline](https://benchmarkdotnet.org/Advanced/Baseline.htm), [Params](https://benchmarkdotnet.org/Advanced/Params.htm)\n* Powerful diagnostics based on ETW events (see [BenchmarkDotNet.Diagnostics.Windows](https://www.nuget.org/packages/BenchmarkDotNet.Diagnostics.Windows/))\n\n## Project Details\n\n- [Website](https://benchmarkdotnet.org/)\n- [Source](https://github.com/dotnet/BenchmarkDotNet)\n- License: [MIT](https://github.com/dotnet/BenchmarkDotNet/blob/master/LICENSE.md)\n- [NuGet](https://www.nuget.org/packages/BenchmarkDotNet/)\n- Project Lead: [Andrey Akinshin](https://github.com/AndreyAkinshin)\n\n## Quicklinks\n\n- [Documentation](https://benchmarkdotnet.org/)\n- [Overview](https://benchmarkdotnet.org/Overview.htm)\n- [Gitter](https://gitter.im/dotnet/BenchmarkDotNet)\n- [ChangeLog](https://github.com/dotnet/BenchmarkDotNet/wiki/ChangeLog)"},{"Title":"Microsoft Azure WebJobs SDK","Logo":"microsoft.jpg","Web":"http://www.microsoft.com","Content":"# Microsoft Azure WebJobs SDK\n\nThe [Azure WebJobs SDK](https://github.com/Azure/azure-webjobs-sdk) is a framework that simplifies the task of writing background processing code that runs in [Azure WebJobs](https://azure.microsoft.com/documentation/articles/websites-dotnet-webjobs-sdk-get-started/). It includes a declarative binding and trigger system that works with Azure Storage Blobs, Queues and Tables as well as Service Bus. The binding system makes it incredibly easy to write code that reads or writes Azure Storage objects. The trigger system automatically invokes a function in your code whenever any new data is received in a queue or blob. The SDK also provides an integrated Dashboard experience in the Azure management portal, with rich monitoring and diagnostics information for your WebJob runs.\n\n## Project Details\n* [Project Code Site](https://github.com/Azure/azure-webjobs-sdk)\n* Project License Type: [MIT](https://github.com/Azure/azure-webjobs-sdk/blob/master/LICENSE.txt)\n* Project Main Contact: [David Ebbo](https://github.com/davidebbo)\n\n## Quicklinks\n\n* [Contribute](https://github.com/Azure/azure-webjobs-sdk/blob/master/CONTRIBUTING.md)\n* [Project Wiki](https://github.com/Azure/azure-webjobs-sdk/wiki)\n* [Azure WebJobs Documentation](https://azure.microsoft.com/documentation/articles/websites-dotnet-webjobs-sdk-get-started/)\n* [Stack Overflow](https://stackoverflow.com/questions/tagged/azure-webjobssdk)\n* [User Forum](https://social.msdn.microsoft.com/Forums/azure/home?forum=windowsazurewebsitespreview)\n* [User Voice](https://feedback.azure.com/forums/169385-websites)"},{"Title":"Chemistry Add-in for Word","Logo":"4f380c83-e988-4d8c-80ce-5434337301cc.jpg","Web":"http://www.chem4word.co.uk/","Content":"# Chemistry Add-in for Word\n\n[Chem4Word](https://www.chem4word.co.uk/) enables you to create chemical structures directly in \nMicrosoft Word.  Not only can you draw your own structures, but you can import structures from \nPubChem and Opsin as well as from your own files.  With the latest version, inside the editor \nform, you can export or import your structures as CML or MDL Molfile format. \nThis will allow you to copy your edited structures to other documents or share them with \nother users or applications.\n\n## Project Details\n\n* [Website](https://www.chem4word.co.uk/)\n* [Version 2 Source Code](https://github.com/Chem4Word/Version2)\n* [Version 3 Source Code](https://github.com/Chem4Word/Version3)\n* [Version 3.1 Source Code](https://github.com/Chem4Word/Version3-1)\n* Project License Type: [Apache 2.0](https://github.com/Chem4Word/Version3/blob/master/Licence.md)\n* Project Main Contacts: [Clyde Davies](https://github.com/deadlyvices), [Mike Williams](https://github.com/MikeWilliams-UK) \n\n## Quicklinks\n\n* [Blog](https://www.chem4word.co.uk/category/news/)\n* [Documentation](https://www.chem4word.co.uk/)\n* [Contribute](https://github.com/Chem4Word/Version3)"},{"Title":".NET Compiler Platform (\u0022Roslyn\u0022)","Logo":"microsoft.jpg","Web":"http://www.microsoft.com","Content":"# .NET Compiler Platform (\u0022Roslyn\u0022)\n\nThe [.NET Compiler Platform (\u0022Roslyn\u0022)](https://github.com/dotnet/roslyn) provides open-source C# and Visual Basic compilers with rich code analysis APIs. You can build code analysis tools with the same APIs that Microsoft is using to implement Visual Studio!\n\n## Project Details\n* [Project Info Site](https://github.com/dotnet/roslyn/wiki/Roslyn%20Overview) \n* [Project Code Site](https://github.com/dotnet/roslyn)\n* Project Docs Repos: [Concepts](https://github.com/dotnet/docs), [APIs](https://github.com/dotnet/roslyn-api-docs)\n* Project License Type: [Apache License 2.0](https://github.com/dotnet/roslyn/blob/master/License.txt)\n* Project Main Contact: [Kevin Pilch-Bisson](https://github.com/Pilchie)\n\n## Quicklinks\n\n* [Contribute](https://roslyn.codeplex.com/wikipage?title=How%20to%20Contribute)\n* [Documentation](https://docs.microsoft.com/dotnet/csharp/roslyn-sdk/) \n* [Jabbr](https://jabbr.net/#/rooms/roslyn) \n* [Questions, Comments and Feedback](https://roslyn.codeplex.com/wikipage?title=Questions%2c%20Comments%2c%20and%20Feedback\u0026referringTitle=Home)\n\nBlogs:\n \n* [VB](https://blogs.msdn.com/b/vbteam/archive/tags/roslyn/) \n* [C#](https://blogs.msdn.com/b/csharpfaq/archive/tags/roslyn/)"},{"Title":"DNN Platform","Logo":"68f0dace-04df-433a-a529-7557051e8946.jpg","Web":"http://www.dnnsoftware.com/","Content":"# DNN Platform\n\n![DNN Platform At A Glance](https://github.com/dnnsoftware/Dnn.Platform/raw/development/dnnplatform.png)\n\nDNN\u00AE ( formerly DotNetNuke\u00AE ) is the leading open source web content management platform (CMS) in the Microsoft ecosystem. The product is used to build professional looking and easy-to-use commercial websites, social intranets, community portals, or partner extranets. Containing dynamic content of all types, DNN sites are easy to deploy and update. The DNN Platform has been downloaded more than 8 million times and powers more than 750,000 websites globally. A community of more than 1 million members forms a powerful support network. \n\nThousands of free and commercial extensions, apps and skins are available at the [DNN Store](https://store.dnnsoftware.com/) that make extending a DNN site fast and affordable.\n\nIn addition to robust content management, the free, open source DNN Platform includes the following built-in features:\n\n* Single installation with multi-site capability\n* File and folder management\n* Static and dynamic Localization - 6 languages out-of-the-box (English, Ducth, French, German, Italian, and Spanish)\n* Customized web site templates and themes\n* Cloud-ready with MS Azure compatibility\n* 100\u0027s of REST API for site and content managment\n* Modern client-side Web tools like CSS 3, HTML 5, JQuery, and React\n* UI with drag and drop capability, and rich-text editor for in-place UI editing\n* Extensible through custom modules and many third party modules available in the DNN store\n* Robust security\n* Administration features like: security roles, protected content, SEO, scheduler, SSL support, taxonomy, site log, and many more.\n\n## Project Details\n\n* [Project Info Site](https://www.dnnsoftware.com/community)\n* Project Code Repos:\n  * [DNN Platform](https://github.com/dnnsoftware/Dnn.Platform)\n  * [DNN Admin Experience (PersonaBar)](https://github.com/dnnsoftware/Dnn.AdminExperience.Library)\n\n## Quick Links\n\n* [Contribute](https://github.com/dnnsoftware/Dnn.Platform/blob/development/CONTRIBUTING.md)\n* [Community Blogs](https://www.dnnsoftware.com/community-blog)\n* [DNN on NuGet](https://www.nuget.org/profiles/dotnetnuke)\n* [DNN Digest (Monthly Newsletter Signup)](https://www.dnnsoftware.com/community/participate/subscribe-to-dnn-digest)\n* [Questions \u0026 Answers](http://answers.dnnsoftware.com/)\n* [Showcase](https://www.dnnsoftware.com/community/participate/community-showcase)\n* [Discussion Forums](http://forums.dnnsoftware.com/)\n* [Video Library](https://www.dnnsoftware.com/videos)\n* [News](https://www.dnnsoftware.com/About/In-The-News/Press-Releases)\n* [DNN on Facebook](https://www.facebook.com/DNNsoftware)\n* [DNN on Twitter](https://www.Twitter.com/DNN)\n* [DNN Store](https://store.dnnsoftware.com/)"},{"Title":"Couchbase Lite for .NET","Logo":"Couchbase.png","Web":"http://www.couchbase.com/","Content":"# Couchbase Lite for .NET\n\nThis project is a port of the [Couchbase Lite](https://developer.couchbase.com/mobile/) portable Java codebase, ported to C#. Couchbase Lite is a fully functional, on-device, lightweight, native, embedded JSON database. With Couchbase Lite, you have the full power of a Couchbase database locally on the device. You can create, update, delete, query, sync and much, much more.\n\n## Project Details\n* [Project Info Site](https://developer.couchbase.com/mobile/)\n* [Project Code Site](https://github.com/couchbaselabs/couchbase-lite-net)\n* Project License Type: [MIT](https://github.com/couchbaselabs/couchbase-lite-net/blob/master/LICENSE)\n* Project Main Contact: [Zachary Gramana](https://github.com/zgramana)\n\n## Quicklinks\n\n* [Discussions](https://groups.google.com/forum/#!forum/mobile-couchbase)"},{"Title":".NET Micro Framework","Logo":"microsoft.jpg","Web":"http://www.microsoft.com","Content":"# .NET Micro Framework\n\nThe [Microsoft\u00AE .NET Micro Framework](https://netmf.github.io/) is an open source platform that enables you to write managed code C# applications using Visual Studio for resource constrained embedded devices.\n\nThe Microsoft .NET Micro Framework SDK supports development of code, including device I/O, in the C# language using a subset of the .NET libraries, and is fully integrated with the Microsoft Visual Studio\u00AE development environment. The .NET Micro Framework class library supports all major namespaces and types from the desktop framework, managed drivers support, Remote Firmware Updates and Cryptographic functions for Secure Devices.\n\n## Project Details\n* [Project Info Site](https://netmf.github.io/) \n* [Project Code Site](https://github.com/NETMF/netmf-interpreter) \n* Project License Type: [Apache License 2.0](https://github.com/NETMF/netmf-interpreter/blob/dev/License.txt)\n* Project Main Contact: [Steve Maillet](https://github.com/smaillet-ms)\n\n## Quicklinks\n\n* [Wiki](https://github.com/NETMF/netmf-interpreter/wiki)"},{"Title":"Entity Framework","Logo":"microsoft.jpg","Web":"http://www.microsoft.com","Content":"# Entity Framework\n\nEntity Framework is the recommend data access technology for new applications in .NET. It is an object-relational mapper that enables .NET developers to work with relational data using domain-specific objects. It eliminates the need for most of the data-access code that developers usually need to write.\n\n### Entity Framework has two versions: \n\n[Entity Framework 6](https://github.com/aspnet/EntityFramework6) is the legacy Entity Framework for .NET Framework, that runs only on Windows.\n\n[Entity Framework Core](https://github.com/aspnet/EntityFrameworkCore) is a new, lightweight and extensible .NET Standard based version for .NET applications running Windows, Linux and macOS.\n\n## Project Details\n* [Project Info Site](https://github.com/aspnet/EntityFrameworkCore)\n* [Project Code Site](https://github.com/aspnet/EntityFrameworkCore)\n* Project License Type: [Apache 2.0](https://github.com/aspnet/EntityFrameworkCore/blob/master/LICENSE.txt)\n\n## Quicklinks\n\n* [Contribute](https://github.com/aspnet/entityframeworkcore/blob/master/CONTRIBUTING.md)\n* [Facebook](https://www.facebook.com/efmagicunicorns) \n* [Twitter](https://twitter.com/efmagicunicorns) \n* [Blog](https://blogs.msdn.microsoft.com/dotnet/tag/entity-framework)\n\n### Entity Framework Documentation:\n* https://docs.microsoft.com/ef"},{"Title":".NET SDK For Hadoop","Logo":"microsoft.jpg","Web":"http://www.microsoft.com","Content":"# .NET SDK For Hadoop\n\nHadoop is an elastic, distributed, schemaless data processing platform, ideal for complex data that require sophisticated parsing and interpretation. Those familiar with C#, VB.NET, or any other .NET language can now leverage the platform using the [Microsoft .NET SDK for Hadoop](https://hadoopsdk.codeplex.com/).\n\n## Project Details\n* [Project Info Site](https://hadoopsdk.codeplex.com/) \n* [Project Code Site](https://hadoopsdk.codeplex.com/SourceControl/latest)\n* Project License Type: [Apache License 2.0](https://hadoopsdk.codeplex.com/license)\n* Project Main Contact: [Matt Winkler](https://www.codeplex.com/site/users/view/mwinkle)\n\n## Quicklinks\n\n* [Documentation](https://hadoopsdk.codeplex.com/documentation) \n* [Discussions](https://hadoopsdk.codeplex.com/discussions)"},{"Title":"DotVVM, Component-based MVVM framework for ASP.NET","Logo":"dotvvm_logo_square.png","Web":"https://www.dotvvm.com/","Content":"# DotVVM: Component-based MVVM framework for ASP.NET\n\n[DotVVM](https://www.dotvvm.com) lets you build interactive web UIs with **just C# and HTML** using the **MVVM** approach. \n\nIt simplifies building of **line of business web apps** and ships with many built-in controls like [GridView](https://www.dotvvm.com/docs/controls/builtin/GridView/latest), [FileUpload](https://www.dotvvm.com/docs/controls/builtin/FileUpload/latest), [Validator](https://www.dotvvm.com/docs/controls/builtin/Validator/latest) and more. \n\nThe easiest way to start with DotVVM is to download **[DotVVM for Visual Studio](https://www.dotvvm.com/landing/dotvvm-for-visual-studio-extension)** and do **File \u003E New \u003E Project**.\n\n* Free extension for [Visual Studio 2017](https://marketplace.visualstudio.com/items?itemName=TomasHerceg.DotVVMforVisualStudio-17892)\n* Free extension for [Visual Studio 2019](https://marketplace.visualstudio.com/items?itemName=TomasHerceg.DotVVM-VSExtension2019)\n\n## Project Details\n\n* [Project Info Site](https://www.dotvvm.com)\n* [Project Code Site](https://github.com/riganti/dotvvm)\n* Project License Type: [Apache License 2.0](https://github.com/riganti/dotvvm/blob/master/LICENSE)\n* Project Main Contact: [Tomas Herceg](https://github.com/tomasherceg)\n\n## Quicklinks\n\n* [DotVVM Academy](https://academy.dotvvm.com)\n* [Documentation](https://www.dotvvm.com/docs)\n* [DotVVM Blog](https://www.dotvvm.com/blog)\n* [Twitter @dotvvm](https://twitter.com/dotvvm)\n* [Gitter Chat](https://gitter.im/riganti/dotvvm)\n* [Samples](https://github.com/search?q=topic%3Adotvvm-sample\u002Borg%3Ariganti\u0026type=Repositories)\n* [Roadmap](https://github.com/riganti/dotvvm/blob/master/roadmap.md)"},{"Title":"IdentityModel","Logo":"ffa8636d-cf76-4e83-88ef-ca4f8af924fe.jpg","Web":"https://github.com/IdentityModel","Content":"# IdentityModel\n\nIdentityModel is a .NET standard helper library for claims-based identity, OAuth 2.0 and OpenID Connect.\n\nIt has the following high level features:\n\n* client libraries for standard OAuth 2.0 and OpenID Connect endpoints like authorize, token, discovery, introspection, revocation etc.\nhelpers for token management\n* constants for standard JWT claim types and protocol values\n* simplified API to access the X509 certificate store\n* misc helpers for base64 URL encoding, time constant string comparison and epoch time\n\n## Project Details\n\n* [Project Info Site](https://github.com/IdentityModel)\n* [Project Code Site](https://github.com/IdentityModel/IdentityModel2)\n* Project License Type: [Apache License 2.0 (Apache)](https://github.com/IdentityModel/IdentityModel2/blob/master/LICENSE)\n* Project Main Contact:\u00A0[Dominick Baier](https://github.com/leastprivilege)\n\n### Quicklinks\n\n* [Documentation](https://identitymodel.readthedocs.io)\n* [Discussions](https://github.com/IdentityModel/IdentityModel2/issues)\n* [Dominick\u0027s blog](https://leastprivilege.com/)\n* [Brock\u0027s blog](https://brockallen.com/)\n* Twitter: [@leastprivilege](https://twitter.com/leastprivilege) \u0026 \n           [@brocklallen](https://twitter.com/brocklallen)"},{"Title":"IdentityManager","Logo":"bb45452e-8c4c-4410-807f-05bc66f75e11.jpg","Web":"https://github.com/IdentityManager","Content":"# IdentityManager\n\n[IdentityManager](https://github.com/identitymanager)\nis a tool for developers and/or administrators to manage the identity\ninformation for users of their applications in ASP.NET Core. This includes \ncreating users, editing user information (passwords, email, claims, etc.) \nand deleting users. It provides a modern replacement for the ASP.NET WebSite\nAdministration tool that used to be built into Visual Studio.\n\n# Project Details\n\n* [Project Info Site](https://github.com/IdentityManager/IdentityManager2)\n* [Project Code Site](https://github.com/IdentityManager/IdentityManager2)\n* Project License Type: [Apache License 2.0 (Apache)](https://github.com/IdentityManager/IdentityManager2/blob/master/LICENSE)\n* Project Main Contact:\u00A0[Scott Brady](https://github.com/scottbrady91)\n\n### Quicklinks\n\n* [Documentation](https://github.com/IdentityManager/IdentityManager/wiki)\n* [Contribute](https://github.com/IdentityManager/IdentityManager2/blob/master/CONTRIBUTING.md)\n* [Rock Solid Knowledge](https://rocksolidknowledge.com) \n* [Scott\u0027s blog](https://www.scottbrady91.com) \n* [Brock\u0027s blog](https://brockallen.com/)\n* [Chat](https://gitter.im/IdentityManager/IdentityManager)\n* Twitter: [@rskltd](https://twitter.com/rskltd) \u0026 \n[@scottbrady91](https://twitter.com/scottbrady91) \u0026 \n[@brocklallen](https://twitter.com/brocklallen)"},{"Title":"Humanizer","Logo":"Humanizer.png","Web":"http://humanizr.net/","Content":"# Humanizer\n\n[Humanizer](http://humanizr.net/) meets all your .NET needs for manipulating and displaying strings, enums, dates, times, timespans, numbers and quantities. It is licensed under the [MIT](https://opensource.org/licenses/MIT) (an OSI approved license).\n\n## Project Details\n\n* [Website](http://humanizr.net/)\n* [Source](https://github.com/Humanizr/Humanizer)\n* License: [MIT](https://opensource.org/licenses/MIT)\n* Project Leads: [Mehdi Khalili](https://github.com/MehdiK) and [Oren Novotny](https://github.com/onovotny)\n\n## Quicklinks\n\n* [Documentation](http://humanizr.net/)\n* Discussions are held on [Gitter](https://gitter.im/Humanizr/Humanizer). \n* [Contribute](https://github.com/Humanizr/Humanizer/blob/master/CONTRIBUTING.md)"},{"Title":"DLR/IronPython2/IronPython3","Logo":"logo_big.png","Web":"#","Content":"# DLR/IronPython2/IronPython3\n\n[DLR](https://github.com/IronLanguages/dlr) is a framework for implementing dynamic languages on top of the .NET Framework. It is used as the basis for [IronPython2](https://github.com/IronLanguages/ironpython2) and [IronPython3](https://github.com/IronLanguages/ironpython3). It is licensed under the permissive [Apache 2.0](https://github.com/IronLanguages/dlr/blob/master/LICENSE) license.\n\n[IronPython2](https://ironpython.net) is an implementation of the Python programming language running on the .NET Framework. IronPython2 implements compatibility with [Python 2.x](https://python.org). It is licensed under the permissive [Apache 2.0](https://github.com/IronLanguages/dlr/blob/master/LICENSE) license.\n\n[IronPython3](https://ironpython.net) is an implementation of the Python programming language running on the .NET Framework. IronPython3 implements compatibility with [Python 3.x](https://python.org). It is licensed under the permissive [Apache 2.0](https://github.com/IronLanguages/dlr/blob/master/LICENSE) license.\n\nJim Hugunin created the project and actively contributed to it up until Version 1.0 which was released on September 5, 2006. Thereafter, it was maintained by a small team at Microsoft until the 2.7 Beta 1 release; Microsoft stopped internal development of IronPython in late 2010. IronPython 2.0 was released on December 10, 2008. The DLR, IronPython2 and IronPython3 are maintained by [Alex Earl](https://github.com/slide) and countless other contributors!\n\n## Project Details\n\n* [Website](https://ironpython.net)\n* [DLR Source](https://github.com/IronLanguages/dlr)\n* [IronPython2 Source](https://github.com/IronLanguages/ironpython2)\n* [IronPython3 Source](https://github.com/IronLanguages/ironpython3)\n* License: [Apache 2.0](https://github.com/IronLanguages/dlr/blob/master/LICENSE)\n* Project Lead: [Alex Earl](https://github.com/slide)\n* Core Team: [Alex Earl](https://github.com/slide) and [St\u00E9phane Lozier](https://github.com/slozier)\n\n## Quicklinks\n\n* [Documentation](https://ironpython.net/documentation/)\n* Discussions are held on the [ironpython-users](https://ironpython.groups.io) mailing list and on [Gitter](https://gitter.im/IronLanguages/ironpython)."},{"Title":"Json.NET","Logo":"twitterlogo.png","Web":"https://www.newtonsoft.com/json","Content":"# Json.NET\n\n[Json.NET](https://www.newtonsoft.com/json) is a popular high-performance JSON framework for .NET.\n\n## Project Details\n\n* [Project Info Site](https://www.newtonsoft.com/json)\n* [Project Code Site](https://github.com/JamesNK/Newtonsoft.Json)\n* Project License Type: [MIT](https://github.com/JamesNK/Newtonsoft.Json/blob/master/LICENSE.md)\n* Project Main Contacts: [James Newton-King](https://github.com/JamesNK)\n\n## Quicklinks\n\n* [Documentation](https://www.newtonsoft.com/json/help)\n* [Blog](http://james.newtonking.com/)\n* [Twitter](https://twitter.com/JamesNK)\n* [Contribute](https://github.com/JamesNK/Newtonsoft.Json/blob/master/CONTRIBUTING.md)"},{"Title":"SixLabors.ImageSharp","Logo":"sixlabors.256.png","Web":"https://sixlabors.com/","Content":"# SixLabors.ImageSharp\n\n[ImageSharp](https://github.com/SixLabors/ImageSharp) is a new, fully featured, fully managed, cross-platform, 2D graphics API.\n\nDesigned to democratize image processing, ImageSharp brings you an incredibly powerful yet beautifully simple API.\n\n# Project Details\n\n- [Project Info Site](https://sixlabors.com/projects/imagesharp)\n- [Project Code Site](https://github.com/SixLabors/ImageSharp)\n- Project Docs Repos: [Concepts and APIs](https://github.com/SixLabors/docs)\n- Project License Type: [Apache 2.0](https://github.com/SixLabors/ImageSharp/master/LICENSE)\n\n### Quicklinks\n\n- [Contribute](https://github.com/SixLabors/ImageSharp/blob/master/.github/CONTRIBUTING.md)\n- [Documentation](https://docs.sixlabors.com)\n- [Discussions](https://gitter.im/ImageSharp/General)"},{"Title":"IdentityServer","Logo":"IDserver_logotransparent.png","Web":"https://identityserver.io/","Content":"# IdentityServer\n\nOpenID Connect and OAuth 2.0 Framework for ASP.NET Core  \n\nIdentityServer is a toolkit for implementing identity \u0026 access control features in your software, e.g.:\n\n* Authentication as a Service\n* Single Sign-on / Sign-out\n* Access Control for APIs\n* Federation Gateway\n\nIdentityServer is [certified](https://openid.net/certification/) by the OpenID Foundation.\n\n## Project Details\n\n* [Project Info Site](https://identityserver.io)\n* [Project Code Site](https://github.com/identityserver)\n* Project License Type: [Apache License 2.0 (Apache)](https://github.com/IdentityServer/IdentityServer4/blob/release/LICENSE)\n* Project Main Contact:\u00A0[Dominick Baier](https://github.com/leastprivilege)\n\n### Quicklinks\n\n* [Documentation](https://identityserver4.readthedocs.io)\n* [Discussions](https://github.com/identityserver/IdentityServer4/issues)\n* [Dominick\u0027s blog](https://leastprivilege.com/)\n* [Brock\u0027s blog](https://brockallen.com/)\n* Twitter: [@leastprivilege](https://twitter.com/leastprivilege) \u0026 \n           [@brocklallen](https://twitter.com/brocklallen)"},{"Title":"Kudu","Logo":"microsoft.jpg","Web":"http://www.microsoft.com","Content":"# Kudu  \n\n[Kudu](https://github.com/projectkudu/kudu) is the engine behind github\ndeployments, WebJobs, and various other features in Azure Web Sites. It\ncan also run outside of Azure.\n\n## Project Details\n\n* [Project Info Site](https://github.com/projectkudu/kudu)\n* [Project Code Site](https://github.com/projectkudu/kudu)\n* Project License Type: [Apache License 2.0 (Apache)](https://github.com/projectkudu/kudu/blob/master/LICENSE.txt)\n* Project Main Contact:\u00A0\u00A0[David Ebbo](https://github.com/davidebbo)\n\n### Quicklinks\n\n* [Documentation](https://github.com/projectkudu/kudu/wiki)\n* [JabbR](https://jabbr.net/#/rooms/kudu)\n* [Contribute](https://github.com/projectkudu/kudu/wiki/Contributing)\n* [Project Governance](https://github.com/projectkudu/kudu/wiki/Project-governance-model)"},{"Title":"Kerberos.NET","Logo":"logo_big.png","Web":"https://syfuhs.net/","Content":"# Kerberos.NET\nA complete Kerberos library built entirely in managed code without (many) OS dependencies.\n\n# What is it?\n\nA library built in .NET that lets you operate on Kerberos messages. You can run a client, host your own KDC, or just validate incoming tickets. It\u0027s intended to be as lightweight as possible.\n\n## Project Details\n\n* [Project Info Site](https://kerberos.dev)\n* [Project Code Site](https://github.com/dotnet/Kerberos.NET)\n* Project License Type: [MIT](https://github.com/dotnet/Kerberos.NET/blob/master/LICENSE)\n* Project Main Contacts: [Steve Syfuhs](https://github.com/SteveSyfuhs/)\n\n## Quicklinks\n\n* [Documentation](https://syfuhs.net/category/kerberos)\n* [Contribute](https://github.com/dotnet/Kerberos.NET/blob/master/CONTRIBUTING.md)"},{"Title":"linq2db","Logo":"logo_big.png","Web":"https://github.com/linq2db/linq2db/","Content":"# linq2db\n\n[linq2db](https://github.com/linq2db/linq2db) - LINQ to DB is the fastest LINQ database access library offering a simple, light, fast, and type-safe layer between your POCO objects and your database.\n\nArchitecturally it is one step above micro-ORMs like Dapper, Massive, or PetaPoco, in that you work with LINQ expressions, not with magic strings, while maintaining a thin abstraction layer between your code and the database. Your queries are checked by the C# compiler and allow for easy refactoring.\n\nHowever, it\u0027s not as heavy as LINQ to SQL or Entity Framework. There is no change-tracking, so you have to manage that yourself, but on the positive side you get more control and faster access to your data.\n\nIn other words LINQ to DB is type-safe SQL..\n\n## Project Details\n\n* [Project Info Site](https://github.com/linq2db/linq2db)\n* [Project Code Site](https://github.com/linq2db/linq2db)\n* Project License Type: [MIT](https://github.com/linq2db/linq2db/blob/master/MIT-LICENSE.txt)\n* Project Main Contacts: [Igor Tkachev](https://github.com/igor-tkachev), [Svyatoslav Danyliv](https://github.com/sdanyliv), [MaceWindu](https://github.com/MaceWindu), [Ilya Chudin](https://github.com/ili).\n\n## Quicklinks\n\n* [Documentation](https://github.com/linq2db/linq2db/wiki)\n* [Blog](http://blog.linq2db.com)\n* [Contribute](https://github.com/linq2db/linq2db/blob/master/CONTRIBUTING.md)"},{"Title":"LLILC","Logo":"sixlabors.256.png","Web":"http://www.microsoft.com","Content":"# LLILC\n\nLLILC (pronounced \u0027lilac\u0027) is an **LL**VM based MS**IL C**ompiler. The goal of the project is to produce a set of .NET tools that utilize LLVM to reach a broad set of platforms and chip architectures. Today LLILC is being developed against [dotnet/CoreCLR](https://github.com/dotnet/coreclr) for use as a JIT, but an ahead of time (AOT) compiler is planned for the future. \n\n## Project Details\n\n* [Project Info Site](https://github.com/dotnet/llilc/wiki)\n* [Project Code Repo](https://github.com/dotnet/llilc)\n* Project License Type: [MIT](https://github.com/dotnet/llilc/blob/master/LICENSE.TXT)\n* Project Main Contact: [Russell Hadley](https://github.com/russellhadley)\n\n## Quicklinks\n* [Wiki](https://github.com/dotnet/llilc/wiki)\n* [Contribute](https://github.com/dotnet/llilc/wiki/Areas-To-Contribute)\n* [Discussions](https://forums.dotnetfoundation.org/)"},{"Title":"Marten","Logo":"emblem.png","Web":"https://martendb.io/","Content":"# Marten\n\n[Marten](https://martendb.io/) gives developers a multi-paradigm framework for modelling, storing and querying data on PostgreSQL. Making use of the battle hardened database engine, Marten transparently exposes the JSON(B) capabilities of PostgreSQL for managing objects and events alike, requiring no ceremony to enable friction-less development. Marten is your object (document) and event store, with bells and whistles attached, be it CRUD, Event Sourcing or anything between.\n\n## Project Details\n\n* [Project Info Site](https://martendb.io/)\n* [Project Code Site](https://github.com/JasperFx/marten)\n* Project License Type: [MIT](https://github.com/JasperFx/marten/blob/master/LICENSE)\n* Project Main Contacts: [Jeremy D. Miller](https://github.com/jeremydmiller), [Babu Annamalai](https://github.com/mysticmind), [Oskar Dudycz](https://github.com/oskardudycz), [Joona-Pekka Kokko](https://github.com/jokokko)\n\n## Quicklinks\n\n* [Documentation](https://martendb.io/documentation/)\n* [Blog](https://jeremydmiller.com/)\n* [Discussions and Help](https://gitter.im/JasperFx/marten)\n* [Twitter](https://twitter.com/marten_lib)\n* [Contribute](https://github.com/JasperFx/marten/blob/master/CONTRIBUTING.md)"},{"Title":"MailKit","Logo":"xamarin.jpg","Web":"https://xamarin.com/","Content":"# MailKit\n\n[MailKit](https://github.com/jstedfast/MailKit) is a cross-platform .NET mail client library with support for IMAP, POP3, and SMTP.\n\n## Project Details\n* [Project Info Site](https://github.com/jstedfast/MailKit)\n* [Project Code Site](https://github.com/jstedfast/MailKit)\n* Project License Type: [MIT](https://github.com/jstedfast/MailKit/blob/master/License.md)\n* Project Main Contact: [Jeffrey Stedfast](jeff@xamarin.com)\n\n## Quicklinks\n\n* [Contribute](https://github.com/jstedfast/MailKit#contributing) \n* [Documentation](http://www.mimekit.net/docs)\n* [Discussions](https://github.com/jstedfast/MailKit/issues)\n* [Blog](https://jeffreystedfast.blogspot.com/search/label/mailkit)"},{"Title":"Cecil","Logo":"7d4309cc-8c5c-4fd5-89dc-6b921babc8de.jpg","Web":"http://evain.net/","Content":"# Cecil\n\n[Cecil](https://github.com/jbevain/cecil) is a library to generate and inspect programs and libraries in the ECMA CIL form.\n\n## Project Details\n\n* [Project Info Site](https://github.com/jbevain/cecil)\n* [Project Code Site](https://github.com/jbevain/cecil)\n* Project License Type: [MIT/X11](https://github.com/jbevain/cecil/blob/master/LICENSE.md)\n* Project Main Contact : [Jb Evain](https://github.com/jbevain)\n\n### Quick Links\n\n* [Documentation](https://github.com/jbevain/cecil/wiki)\n* [Discussion](https://groups.google.com/group/mono-cecil)"},{"Title":"Managed Extensibility Framework (MEF, MEF2)","Logo":"microsoft.jpg","Web":"http://www.microsoft.com","Content":"# Managed Extensibility Framework (MEF, MEF2)\n\nThe [Managed Extensibility Framework (MEF)](https://mef.codeplex.com/) is a composition layer for .NET that improves the flexibility, maintainability and testability of large applications. MEF can be used for third-party plugin extensibility, or it can bring the benefits of a loosely-coupled plugin-like architecture to regular applications. MEF is a part of the Microsoft .NET Framework, with types primarily under the System.ComponentModel.Composition.* namespaces.\n\n## Project Details\n* [Project Info Site](https://mef.codeplex.com/) \n* [Project Code Site](https://mef.codeplex.com/SourceControl/latest) \n* Project License Type: [Microsoft Public License (Ms-PL)](https://mef.codeplex.com/license)\n* Project Main Contact: [Richard Lander](https://github.com/richlander) \n\n## Quicklinks\n\n* [Documentation](https://mef.codeplex.com/documentation) \n* [Discussions](https://mef.codeplex.com/discussions)"},{"Title":"MimeKit","Logo":"xamarin.jpg","Web":"https://xamarin.com/","Content":"# MimeKit\n\n[MimeKit](https://github.com/jstedfast/MimeKit) is a C# MIME creation and parser library with support for S/MIME, PGP, DKIM, TNEF, and Unix mbox spools.\n\n## Project Details\n* [Project Info Site](https://github.com/jstedfast/MimeKit) \n* [Project Code Site](https://github.com/jstedfast/MimeKit) \n* Project License Type: [MIT](https://github.com/jstedfast/MimeKit/blob/master/License.md)\n* Project Main Contact: [Jeffrey Stedfast](mailto:jeff@xamarin.com)  \n\n## Quicklinks\n\n* [Contribute](https://github.com/jstedfast/MimeKit#contributing) \n* [Documentation](http://www.mimekit.net/docs)\n* [Discussions](https://github.com/jstedfast/MimeKit/issues)\n* [Blog](https://jeffreystedfast.blogspot.com/search/label/mimekit)"},{"Title":"MSBuild","Logo":"microsoft.jpg","Web":"http://www.microsoft.com","Content":"# MSBuild\n\nThe Microsoft Build Engine, also known as [MSBuild](https://github.com/microsoft/msbuild), is a platform for building applications. \n\n## Project Details\n* [Project Info Site](https://github.com/microsoft/msbuild) \n* [Project Code Site](https://github.com/microsoft/msbuild) \n* Project License Type: [MIT](https://github.com/Microsoft/msbuild/blob/master/LICENSE)\n* Project Main Contacts: [Craig Campbell](https://github.com/Craig-Campbell-MS), [Nikolai Tillmann](https://github.com/NTillmann)\n \n\n## Quicklinks\n\n* [Documentation Wiki](https://github.com/microsoft/msbuild/wiki)\n* [MSDN Documentation](https://msdn.microsoft.com/en-us/library/dd393574.aspx) \n* [Discussions](https://forums.dotnetfoundation.org/)\n* [Issues](https://github.com/microsoft/msbuild/issues)\n* Contact the team: [msbuild@microsoft.com](mailto:msbuild@microsoft.com)"},{"Title":"Mono","Logo":"logo_big.png","Web":"#","Content":"# Mono\n\n[Mono](https://mono-project.com) is an cross-platform and open source implementation of the .NET framework \nthat was started independently in 2001.   The technology was originally developed\nby Ximian, which was acquired by Novell, then at Novell, then at [Xamarin](https://xamarin.com) and \nnow [Microsoft](https://microsoft.com).\n\nMono provides a complete SDK (compiler, runtimes, libraries) to develop .NET applications on \na wide range of platforms. It is most commonly used as a .NET runtime that supports the .NET desktop\nAPI profile, as well as an embeddable runtime that is used to power mobile platforms (Xamarin.iOS,\nXamarin.Android, Xamarin.tvOS, Xamarin.Mac, Xamarin.watchOS) and gaming consoles.\n\nMono is part of the [.NET Foundation](https://dotnetfoundation.org/) and [Microsoft](https://microsoft.com)\nsupports it as part of the Xamarin commercial offerings. Additionally, the Mono project has an active and \nenthusiastic community. \n\n## Project Details\n\n- [Website](https://www.mono-project.com/)\n- [Source](https://github.com/mono/mono)\n- License: [MIT](https://github.com/mono/mono/blob/master/LICENSE)\n- Project Lead: [Miguel de Icaza](https://github.com/migueldeicaza)\n\n## Quicklinks\n\n- [Documentation](https://www.mono-project.com/docs/)\n- [Community](https://www.mono-project.com/community/)\n- [News](https://www.mono-project.com/news/)\n- [Download](https://www.mono-project.com/download/)\n- [Contributing](https://www.mono-project.com/community/contributing/)"},{"Title":"Microsoft Web Protection Library","Logo":"microsoft.jpg","Web":"http://www.microsoft.com","Content":"# Microsoft Web Protection Library\n\nThe [Microsoft Web Protection Library (WPL)](https://wpl.codeplex.com/) is a set of .NET assemblies that help you protect your web sites. The WPL includes AntiXSS that provides a myriad of encoding functions for user input, including HTML, HTML attributes, XML, CSS and JavaScript. WPL also includes the Security Runtime Engine that provides a wrapper around your existing web sites, ensuring that common attack vectors do not make it to your application.\n\n## Project Details\n* [Project Info Site](https://wpl.codeplex.com/) \n* [Project Code Site](https://wpl.codeplex.com/SourceControl/latest) \n* Project License Type: [Microsoft Public License (Ms-PL)](https://wpl.codeplex.com/license)\n* Project Main Contact: [Barry Dorrans](https://www.codeplex.com/site/users/view/bdorrans)\n\n## Quicklinks\n\n* [Discussions](https://wpl.codeplex.com/discussions)"},{"Title":"ML.NET","Logo":"microsoft.jpg","Web":"http://www.microsoft.com","Content":"# ML.NET\n\n[ML.NET](https://dotnet.microsoft.com/apps/machinelearning-ai/ml-dotnet) is a cross-platform open-source machine learning framework which makes machine learning accessible to .NET developers.\n\nML.NET allows .NET developers to develop their own models and infuse custom ML into their applications without prior expertise in developing or tuning machine learning models, all in .NET.\n\n# Project Details\n\n* [Project Info Site](https://dotnet.microsoft.com/apps/machinelearning-ai/ml-dotnet)\n* [Project Code Site](https://github.com/dotnet/machinelearning)\n* Project Docs Repos: [Concepts](https://github.com/dotnet/docs), [APIs](https://github.com/dotnet/ml-api-docs)\n* Project License Type: [MIT license](https://github.com/dotnet/machinelearning/blob/master/LICENSE)\n\n### Quicklinks\n\n* [Contribute](https://github.com/dotnet/machinelearning/blob/master/CONTRIBUTING.md)\n* [Documentation](https://aka.ms/mlnetdocs)\n* [Discussions](https://github.com/dotnet/machinelearning/issues)"},{"Title":"MVVM Light Toolkit","Logo":"MvvmLight.png","Web":"http://www.mvvmlight.net/","Content":"# MVVM Light Toolkit\n\nThe purpose of the [MVVM Light Toolkit](http://mvvmlight.net/) is to accelerate the creation and development of MVVM applications in WPF, Silverlight, Windows Store (RT), and for Windows Phone.\n\n## Project Details\n* [Project Info Site](http://mvvmlight.net)\n* [Project Code Site](https://mvvmlight.codeplex.com/SourceControl/latest) \n* Project License Type: [MIT](https://mvvmlight.codeplex.com/license)\n* Project Main Contact: [Laurent Bugnion](https://www.codeplex.com/site/users/view/lbugnion) \n\n## Quicklinks\n\n* [Documentation](https://mvvmlight.codeplex.com/documentation) \n* [Discussions](https://mvvmlight.codeplex.com/discussions) \n* [Blog](http://blog.galasoft.ch/posts/category/mvvm/)\n* Twitter: @LBugnion"},{"Title":"Nerdbank.GitVersioning","Logo":"logo_big.png","Web":"http://blog.nerdbank.net/","Content":"# Nerdbank.GitVersioning\n\nNerdbank.GitVersioning adds precise, semver-compatible git commit information\nto every assembly, VSIX, NuGet and NPM package, and more.\nIt implicitly supports all cloud build services and CI server software\nbecause it simply uses git itself and integrates naturally in MSBuild, gulp\nand other build scripts.\n\n## Project Details\n\n* [GitHub Repo](https://github.com/dotnet/Nerdbank.GitVersioning)\n* \uD83D\uDCE6 Packages: \n  [![NuGet package](https://img.shields.io/nuget/v/Nerdbank.GitVersioning.svg)](https://nuget.org/packages/Nerdbank.GitVersioning)\n  [![NPM package](https://img.shields.io/npm/v/nerdbank-gitversioning.svg)](https://www.npmjs.com/package/nerdbank-gitversioning)\n* \u2696 License: [MIT](https://github.com/dotnet/Nerdbank.GitVersioning/tree/master/LICENSE)\n* Main contacts: [Andrew Arnott](https://keybase.io/aarnott)\n\n## More info\n\n* \u2139\uFE0F [Documentation](https://github.com/dotnet/Nerdbank.GitVersioning/tree/master/README.md)\n* [![Join the chat at https://gitter.im/AArnott/Nerdbank.GitVersioning](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/AArnott/Nerdbank.GitVersioning?utm_source=badge\u0026utm_medium=badge\u0026utm_campaign=pr-badge\u0026utm_content=badge)"},{"Title":"MvvmCross","Logo":"logo_big.png","Web":"#","Content":"# MvvmCross\n\n[MvvmCross](https://mvvmcross.com) is a cross platform MVVM framework which lets you, build clean, pixel perfect, native UIs. \nShare behavior and business logic in a single codebase across supported platforms, using the Model-View-ViewModel (MVVM) design pattern. \nMvvmCross is a framework specifically developed for Xamarin and the mobile ecosystem. It supports Xamarin.iOS, \nXamarin.Android, Xamarin.Mac, Xamarin.Forms, Universal Windows Platform (UWP) and Windows Presentation Framework (WPF)\n\n## Project Details\n\n* [Project Info Site](https://mvvmcross.com)\n* [Project Code Site](https://github.com/MvvmCross/)\n* Project License Type: [MS-PL](https://github.com/MvvmCross/MvvmCross/blob/develop/LICENSE)\n* Project Main Contacts: [Tomasz Cielecki](https://github.com/cheesebaron) and [Martijn van Dijk](https://github.com/martijn00)\n\n## Quicklinks\n\n* [Documentation](https://www.mvvmcross.com/documentation/)\n* [Blog](https://www.mvvmcross.com/blog/)\n* [Discussions and Help](https://xamarinchat.herokuapp.com/) in the #mvvmcross channel\n* [Twitter](https://twitter.com/mvvmcross)\n* [Contribute](https://github.com/MvvmCross/MvvmCross/blob/develop/README.md)"},{"Title":"Newtonsoft.Json","Logo":"logo_big.png","Web":"#","Content":"# Newtonsoft.Json\n\nNewtonsoft.Json (Json.NET) is a popular high-performance JSON framework for .NET\n\n## Project Details\n\n* [Website](https://www.newtonsoft.com/json)\n* [Source](https://github.com/JamesNK/Newtonsoft.Json)\n* License: [MIT](https://github.com/JamesNK/Newtonsoft.Json/blob/master/LICENSE.md)\n* [NuGet](https://www.nuget.org/packages/Newtonsoft.Json/)\n* Project Leads: [James Newton-King](https://github.com/JamesNK)\n\n## Quicklinks\n\n* [Documentation](https://www.newtonsoft.com/json/help)\n* [Contribute](https://github.com/JamesNK/Newtonsoft.Json/blob/master/CONTRIBUTING.md)"},{"Title":".NET Core","Logo":"microsoft.jpg","Web":"http://www.microsoft.com","Content":"# .NET Core\n\n.NET Core has a high-performance and modular design, and supports full side by side to make it easy to adopt new .NET Core versions without affecting other apps. It currently runs on Linux, Mac, and Windows. [ASP.NET Core](https://dotnetfoundation.org/asp-net-core) is built on top of .NET Core. ASP.NET Core is a high-performance and modular design, and supports full side by side to make it easy to adopt new versions without affecting other apps. These products are actively developed by the .NET team and in collaboration with a community of open source developers. Together we are dedicated to improving and extending the .NET platform with new features and for new scenarios.\n\n.NET Core has two major components. It includes a small runtime that is built from the same codebase as the .NET Framework CLR. The .NET Core runtime includes the same GC and JIT (RyuJIT), but doesn\u2019t include features like Application Domains or Code Access Security. The runtime is delivered on NuGet,via the Microsoft.CoreCLR package.\n\n.NET Core also includes the base class libraries. These libraries are largely the same code as the .NET Framework class libraries, but have been factored (removal of dependencies) to enable us to ship a smaller set of libraries. These libraries are shipped as System.* NuGet packages on NuGet.org. This enables both smaller footprint applications, and allows different applications on the same machine to use different versions of .NET Core.\n\n## Project Details\n\n* [Project Info Site](https://github.com/dotnet/core)\n* Project Code Repos:  [.NET Core Framework](https://github.com/dotnet/corefx), [.NET Core Common Language Runtime]( https://github.com/dotnet/coreCLR), [.NET Core Tools](https://github.com/dotnet/cli)\n* Project Docs Repos: [Concepts](https://github.com/dotnet/docs), [APIs](https://github.com/dotnet/dotnet-api-docs), [Samples](https://github.com/dotnet/samples)\n* Project License Type: [MIT](https://github.com/dotnet/corefx/blob/master/LICENSE)\n* Project Main Contact: [Immo Landwerth](https://github.com/terrajobst)\n\n## Quicklinks\n\n* [Contribute](https://github.com/dotnet/corefx/blob/master/CONTRIBUTING.md)\n* [Discussions](https://forums.dotnetfoundation.org/)\n* [Samples](https://github.com/Microsoft/dotnetsamples)\n* [Blog](https://blogs.msdn.microsoft.com/dotnet/)\n* Twitter: [@DotNet](https://twitter.com/dotnet)\n* [Documentation](https://docs.microsoft.com/dotnet)"},{"Title":"Nancy","Logo":"logo_big.png","Web":"#","Content":"# Nancy\n\nNancy is a lightweight, low-ceremony, framework for building HTTP based services on .NET Framework/Core and [Mono](https://mono-project.com). The goal of the framework is to stay out of the way as much as possible and provide a super-duper-happy-path to all interactions.\n\nNancy is designed to handle \u0060DELETE\u0060, \u0060GET\u0060, \u0060HEAD\u0060, \u0060OPTIONS\u0060, \u0060POST\u0060, \u0060PUT\u0060 and \u0060PATCH\u0060 requests and provides a simple, elegant, [Domain Specific Language (DSL)](https://en.wikipedia.org/wiki/Domain-specific_language) for returning a response with just a couple of keystrokes, leaving you with more time to focus on the important bits..\n**your** code and **your** application.\n\nWrite your application\n\n\u0060\u0060\u0060csharp\npublic class Module : NancyModule\n{\n    public Module()\n    {\n        Get(\u0022/greet/{name}\u0022, x =\u003E {\n            return string.Concat(\u0022Hello \u0022, x.name);\n        });\n    }\n}\n\u0060\u0060\u0060\n\n## The super-duper-happy-path\n\nThe \u0022super-duper-happy-path\u0022 (or SDHP if you\u2019re \u2018down with the kids\u2019 ;-)) is a phrase we coined to describe the ethos of Nancy; and providing the \u201Csuper-duper-happy-path\u201D experience is something we strive for in all of our APIs.\n\nWhile it\u2019s hard to pin down exactly what it is, it\u2019s a very emotive term after all, but the basic ideas behind it are:\n\n* \u201CIt just works\u201D - you should be able to pick things up and use them without any mucking about. Added a new module? That\u2019s automatically discovered for you. Brought in a new View Engine? All wired up and ready to go without you having to do anything else. Even if you add a new dependency to your module, by default we\u2019ll locate that and inject it for you - no configuration required.\n* \u201CEasily customisable\u201D - even though \u201Cit just works\u201D, there shouldn\u2019t be any barriers that get in the way of customisation should you want to work the way you want to work with the components that you want to use. Want to use another container? No problem! Want to tweak the way routes are selected? Go ahead! Through our bootstrapper approach all of these things should be a piece of cake.\n* \u201CLow ceremony\u201D - the amount of \u201CNancy code\u201D you should need in your application should be minimal. The important part of any Nancy application is your code - our code should get out of your way and let you get on with building awesome applications. As a testament to this it\u2019s actually possible to fit a functional Nancy application into a single Tweet :-)\n* \u201CLow friction\u201D - when building software with Nancy the APIs should help you get where you want to go, rather than getting in your way. Naming should be obvious, required configuration should be minimal, but power and extensibility should still be there when you need it.\n\nAbove all, creating an application with Nancy should be a pleasure, and hopefully fun! But without sacrificing the power or extensibility that you may need as your application grows.\n\n## Project Details\n\n- [Website](http://nancyfx.org/)\n- [Source](https://github.com/NancyFx/Nancy)\n- License: [MIT](https://github.com/dotnet/BenchmarkDotNet/blob/master/LICENSE.md)\n- [NuGet](https://www.nuget.org/packages/Nancy)\n- Project Lead: [Andreas H\u00E5kansson](https://github.com/thecodejunkie) \u0026 [Steven Robbins](https://github.com/grumpydev)\n\n## Quicklinks\n\n- [Documentation](https://github.com/NancyFx/Nancy/wiki/Documentation)\n- [Slack](http://slack.nancyfx.org/)\n- [Contributing](https://github.com/NancyFx/Nancy/blob/master/.github/CONTRIBUTING.md)"},{"Title":"NuGet Trends","Logo":"logo_big.png","Web":"#","Content":"# NuGet Trends\n\n[NuGet Trends](https://nugettrends.com/) holds historical data of NuGet packages download numbers. It\u0027s a useful tool for package maintainers to see the download rate of their packages and also for people interested in packages popularity over time. The database has the complete nuget.org catalog which include target framework information. That means that there\u0027s a lot more features we can add, like TFM adoption overtime, dependency graphs etc.\n\n\n## Project Details\n\n* [The website](https://nugettrends.com)\n* [Project Code Site](https://github.com/dotnet/nuget-trends)\n* Project License Type: [MIT](https://github.com/dotnet/nuget-trends/blob/master/LICENSE)\n* Project Main Contact(s): [Bruno Garcia](https://twitter.com/brungarc), [Joao Grassi](https://twitter.com/jotagrassi)\n\n### Quicklinks\n\n* [Gitter chat](https://gitter.im/NuGetTrends/Lobby)\n* [![Twitter](https://img.shields.io/twitter/follow/NuGetTrends?label=NuGetTrends\u0026style=social)](https://twitter.com/intent/follow?screen_name=NuGetTrends)\n* Project [announcement on reddit](https://www.reddit.com/r/dotnet/comments/ce0ffd/nugettrends_new_resource_for_net_library_authors/)."},{"Title":"Orchard CMS","Logo":"microsoft.jpg","Web":"http://www.microsoft.com","Content":"# Orchard CMS \n\n[Orchard](https://www.orchardproject.net/) is a free, open source,\ncommunity-focused Content Management System built on the ASP.NET MVC\nplatform. Orchard is built on a modern architecture that puts\nextensibility up-front, as its number one concern. All components in\nOrchard can be replaced or extended. Content is built from easily\ncomposable building blocks. Modules extend the system in a very\ndecoupled fashion, where a commenting module for example can as easily\napply to pages, blog posts, photos or products. A rich UI composition\nsystem completes the picture and ensures that you can get the exact\npresentation that you need for your content.\n\n# Project Details\n\n* [Project Info Site](https://www.orchardproject.net/)\n* [Project Code Site](https://github.com/OrchardCMS/Orchard)\n* Project License Type: [New BSD License(BSD)](https://raw.githubusercontent.com/OrchardCMS/Orchard/master/LICENSE.txt)\n* Project Main Contact: [Steering Committee](http://orchardproject.net/about-us)\n\n### Quicklinks\n\n* [Documentation](http://docs.orchardproject.net/)\n* [Discussions](http://orchardproject.net/discussions)\n* [Contribute](http://www.orchardproject.net/contribution)\n* [Gitter](https://gitter.im/OrchardCMS/Orchard)"},{"Title":"Open Live Writer","Logo":"microsoft.jpg","Web":"http://www.microsoft.com","Content":"# Open Live Writer\n\nOpen Live Writer makes it easy to write, preview, and post to your blog.\nFor more information see http://www.OpenLiveWriter.org/\n\n## Project Details\n\n* [Project Info Site](http://openlivewriter.org)\n* Project Code Repos:  [Open Live Writer](https://github.com/openlivewriter)\n* Project License Type: [MIT](https://github.com/OpenLiveWriter/OpenLiveWriter/blob/master/license.txt)\n* Project Main Contact: [Rob Dolin](https://github.com/RobDolin)\n* Project Secondary Contact: [Will Duff](https://github.com/WillDuff)\n\n## Quicklinks\n* [Download](http://openlivewriter.org)\n* Twitter: [@OpenLiveWriter](https://twitter.com/openlivewriter)"},{"Title":"NuGet","Logo":"microsoft.jpg","Web":"http://www.microsoft.com","Content":"# NuGet \n\n[NuGet](https://www.nuget.org/) is the package manager for the Microsoft development platform\nincluding .NET. The NuGet client tools provide the ability to produce\nand consume packages. The NuGet Gallery (nuget.org) is the central\npackage repository used by all package authors and consumers.\n\n## Project Details\n\n* [Project Info Site](https://www.nuget.org)\n* [Project Code Site](https://github.com/nuget/home)\n* Project License Type: [Apache License 2.0 (Apache)](https://github.com/nuget/home/blob/master/LICENSE.txt)\n* Project Main Contact(s): [Anand Gaurav](https://twitter.com/adgrv), [Rob Relyea](https://twitter.com/rrelyea)\n\n### Quicklinks\n\n* [Documentation](https://docs.nuget.org)\n* [Discussions](https://github.com/nuget/home/issues)\n* [Blog](https://blog.nuget.org)\n* Twitter: [@nuget](https://twitter.com/nuget)\n* [Contribute](https://docs.nuget.org/contribute/contributing-to-NuGet)"},{"Title":"Orleans","Logo":"microsoft.jpg","Web":"http://www.microsoft.com","Content":"# Orleans\n\n[Orleans](https://dotnet.github.io/orleans/) is a framework that provides a straight-forward approach to building distributed high-scale computing applications, without the need to learn and apply complex concurrency or other scaling patterns. It was created by Microsoft Research and designed for use in the cloud. Orleans has been used extensively running in Microsoft Azure by several Microsoft product groups, most notably by 343 Industries as a platform for all of Halo 4 and Halo 5 cloud services, as well as by a number of other projects and companies.\n\n## Project Details\n\n* [Project Info Site](https://dotnet.github.io/orleans/)\n* [Project Code Site](https://github.com/dotnet/orleans)\n* Project License Type: [MIT](https://github.com/dotnet/orleans/blob/master/LICENSE)\n* Project Main Contact: [Sergey Bykov](https://github.com/sergeybykov)\n\n## Quicklinks\n* [Contribute](https://dotnet.github.io/orleans/Community/Contributing.html)\n* [Discussions](https://gitter.im/dotnet/orleans)\n* [Documentation](http://dotnet.github.io/orleans/Documentation/Introduction.html)"},{"Title":"Open XML SDK","Logo":"microsoft.jpg","Web":"http://www.microsoft.com","Content":"# Open XML SDK\n\nThe [Open XML SDK](https://github.com/officedev/open-xml-sdk) provides .NET developers with a set of strongly typed classes that make it easy to read, write and manipulate the parts and content in an Open XML document such as the DOCX, XLSX or PPTX files created by Microsoft Office. It can be used in any .NET solution, and work is underway to enable use of it from Mono as well.\n\n## Project Details\n\n* [Project Info Site](https://github.com/officedev/open-xml-sdk)\n* [Project Code Site](https://github.com/officedev/open-xml-sdk)\n* Project License Type: [Apache License 2.0](https://github.com/OfficeDev/Open-XML-SDK/blob/master/LICENSE.txt)\n* Project Main Contacts: [Eric White](https://github.com/EricWhiteDev), [Chris Rae](https://github.com/pugwonk)\n\n## Quicklinks\n\n* [Documentation](https://github.com/OfficeDev/office-content) \n* [How to build and use the SDK](https://www.ericwhite.com/blog/the-open-xml-sdk-is-now-open-source/) \n* [Discussions](https://www.ericwhite.com/blog/forums/forum/open-xml-sdk/)"},{"Title":"NUnit Test Framework","Logo":"2678858.png","Web":"http://nunit.org/","Content":"# NUnit Test Framework\n\n[NUnit](https://nunit.org) is a unit testing framework for C#, F#, VB.NET and other .NET languages. [NUnit](https://nunit.org) aims to support a variety of testing styles on all .NET platforms. It is licensed under the permissive [MIT](https://github.com/nunit/nunit/blob/master/LICENSE.txt) license.\n\n[NUnit](https://nunit.org) is the oldest and most popular unit testing framework for .NET. It was originally written by Philip Craig in 2000 on an alpha release of the .NET Framework. NUnit 2 was written by [James Newkirk](https://github.com/jnewkirk) and maintained by [Charlie Poole](https://github.com/CharliePoole) and the latest incarnation, NUnit 3 was written by [Charlie Poole](https://github.com/CharliePoole), [Rob Prouse](https://github.com/rprouse) and countless other contributors.\n\n## Project Details\n\n* [Website](https://nunit.org)\n* [Source](https://github.com/nunit/nunit)\n* License: [MIT](https://github.com/nunit/nunit/blob/master/LICENSE.txt)\n* Project Lead: [Rob Prouse](https://github.com/rprouse)\n* Core Team: [Charlie Poole](https://github.com/CharliePoole), [Terje Sandstrom](https://github.com/OsirisTerje), [Chris Maddock](https://github.com/ChrisMaddock) and [Joseph Musser](https://github.com/jnm2)\n\n## Quicklinks\n\n* [Documentation](https://github.com/nunit/docs)\n* Discussions are held on the [nunit-discuss](https://groups.google.com/group/nunit-discuss) mailing list and on [Gitter](https://gitter.im/nunit/nunit).\n* [Contribute](https://github.com/nunit/nunit/blob/master/CONTRIBUTING.md)"},{"Title":"Protobuild","Logo":"09c85cea-3b68-4452-9977-03c65e69d5fd.jpg","Web":"https://protobuild.org/","Content":"# Protobuild\n\n[Protobuild](https://protobuild.org) is a project generation system for C#. It aims to make cross-platform development in C# easier, by generating your projects in the appropriate format for each platform.\n\nWith Protobuild, you can have a project target Windows, Linux, Mac, iOS, tvOS, Android, Ouya, Windows 8, Windows Phone, Windows Phone 8.1, Windows Universal Apps and Javascript (via JSIL), while taking advantage of the native APIs available on each platform.\n\n## Project Details\n\n* [Project Info Site](https://protobuild.org/)\n* [Project Code Site](https://github.com/Protobuild/)\n* Project License Type: [MIT](https://github.com/Protobuild/Protobuild/blob/master/LICENSE.md)\n* Project Main Contact: [June Rhodes](https://github.com/hach-que)\n\n## Quicklinks\n\n* [Download \u0026 Website](https://protobuild.org/)\n* [Documentation](https://protobuild.readthedocs.io/en/latest/)"},{"Title":"OWIN Authentication Middleware (Katana Project)","Logo":"microsoft.jpg","Web":"http://www.microsoft.com","Content":"# OWIN Authentication Middleware (Katana Project)\n\n[Katana](https://katanaproject.codeplex.com/) is a flexible set of components for building and hosting OWIN-based web applications. The next major version of Katana is part of the ASP.NET vNext project on GitHub, including support for ASP.NET MVC, Web API, and SignalR. See [https://github.com/aspnet/home](https://github.com/aspnet/home) for details.\n\n## Project Details\n* [Project Info Site](https://katanaproject.codeplex.com/) \n* [Project Code Site](http://katanaproject.codeplex.com/SourceControl/latest#src/) \n* Project License Type: [Apache License 2.0](https://katanaproject.codeplex.com/license)\n* Project Main Contact: [Daniel Roth](https://www.codeplex.com/site/users/view/danroth27)\n\n## Quicklinks\n\n* [Contribute](https://katanaproject.codeplex.com/wikipage?title=contribute) \n* [Documentation](https://katanaproject.codeplex.com/documentation)\n* [Discussions](https://katanaproject.codeplex.com/discussions)"},{"Title":"Polly","Logo":"app-vNext.jpg","Web":"http://www.thepollyproject.org","Content":"# Polly\n\nToday\u0027s cloud application, mobile, data-streaming, and IoT technologies all depend vitally on reliable connectivity. But underlying systems can fail, and networks are notoriously fickle: outages, latency, transient blips, spikes in load - all challenge 100% reliability.\n\n[Polly](https://github.com/App-vNext/Polly/) helps you navigate the unreliable network. By providing resilience strategies in fluent-to-express policies such as Retry, Circuit Breaker, Timeout, Bulkhead Isolation, and Fallback, Polly can help you reduce fragility, and keep your systems and customers connected!\n\nThe closest project comparison is to [Hystrix](https://github.com/Netflix/Hystrix/wiki) in the java world. The .NET space has no comparable offering. We are building Polly to solve the same problems, but in a flexible, lightweight, \u2018keep things simple\u2019 spirit.\n\nBest of all, that lightweight approach means Polly can work anywhere .NET can run. Whether you\u2019re building an occasionally connected mobile application, or a heavy duty business intelligence service, simply drop in the Polly NuGet package and get started right away!\n\n## Project Details\n\n* [Website](http://www.thepollyproject.org)\n* [Source](https://github.com/App-vNext/Polly)\n* License: [New BSD](https://github.com/App-vNext/Polly/blob/master/LICENSE.txt)\n* [NuGet](https://www.nuget.org/packages/Polly)\n* Project Leads: [Dylan Reisenberger](https://github.com/reisenberger) and [Joel Hulen](https://github.com/joelhulen)\n\n## Quicklinks\n\n* [Documentation](https://github.com/App-vNext/Polly/wiki)\n* Discussions are held on [Slack](https://pollytalk.slack.com/). Not a member yet? [Sign up now!](http://www.pollytalk.org/)\n* [Contribute](https://github.com/App-vNext/Polly/wiki/Git-Workflow)"},{"Title":"Reactive Extensions for .NET","Logo":"microsoft.jpg","Web":"http://www.microsoft.com","Content":"# Reactive Extensions for .NET\n\n[Reactive Extensions](http://reactivex.io/) is a library for composing\nasynchronous and event-based programs using observable sequences and LINQ-style\nquery operators. Using Rx, developers represent asynchronous data streams with\nObservables, query asynchronous data streams using LINQ operators, and\nparameterize the concurrency in the asynchronous data streams using Schedulers.\nSimply put, Rx = Observables \u002B LINQ \u002B Schedulers..\n\n## Project Details\n\n* [Project Info Site](http://reactivex.io)\n* [Project Code Site](https://github.com/dotnet/reactive)\n* Project License Type: [MIT](https://github.com/dotnet/reactive/blob/master/LICENSE)\n* Project Main Contacts: [Bart de Smet](https://github.com/bartdesmet), [Matt Podwysocki](https://twitter.com/mattpodwysocki), [Oren Novotny](https://github.com/onovotny) and [Brendan Forster](https://github.com/shiftkey)\n\n## Quicklinks\n\n* [Documentation](https://msdn.microsoft.com/en-us/library/hh242985(v=vs.103).aspx)\n* [Discussions and Help](https://github.com/dotnet/reactive#join-the-conversation)\n* [Contribute](https://github.com/dotnet/reactive#contribute)"},{"Title":"Peachpie Compiler Platform","Logo":"round-orange-196x196.png","Web":"http://www.peachpie.io","Content":"# Peachpie Compiler Platform\n\n[Peachpie](https://www.peachpie.io) is a modern compiler and runtime of PHP for .NET and .NET Core, \nbuilt on top of Roslyn. It aims to be fully compatible with the PHP language, including PHP 7.1 and any newly released versions.\n\n## Project Goals\n\n- **Increased performance**: Peachpie\u0027s extensive type analysis and the influence of Microsoft Roslyn should provide an improved performance of PHP applications and components. \n- **Security**: since programs run within the standardized and manageable .NET or .NET Core environment, the code is fully verifiable without any unsafe constructs. \n- **Cross-platform development**: the project compiles legacy PHP code into portable class libraries, enabling developers to build cross-platform apps and libraries for Microsoft platforms.  \n- **Full .NET compatibility**: compiled programs run on the reimplemented Peachpie runtime, fully compatibly with the PHP runtime.\n- **Both-way interoperability**: the project allows for hybrid applications, where parts are written in C# and others in PHP. The parts will be entirely compatible and can communicate seamlessly, all within the .NET framework. \n\n## Project Details\n\n* [Project Info Site](https://www.peachpie.io)\n* [Project Code Site](https://github.com/peachpiecompiler/peachpie)\n* Project License Type: [Apache License 2.0](https://github.com/peachpiecompiler/peachpie/blob/master/LICENSE.txt)\n* Project Main Contacts: [Jakub Misek](https://github.com/jakubmisek), [Benjamin Fistein](https://github.com/bfistein)\n\n## Quicklinks\n\n* [Getting Started](https://www.peachpie.io/getstarted) and [Documentation](https://github.com/peachpiecompiler/peachpie/wiki)\n* [Blog](https://www.peachpie.io/blog)\n* [Discussions and Help](https://gitter.im/iolevel/peachpie)\n* [Twitter](https://twitter.com/pchpcompiler) and [Facebook](https://www.facebook.com/pchpcompiler)\n* [VS Code Extension](https://marketplace.visualstudio.com/items?itemName=iolevel.peachpie-vscode)"},{"Title":"Prism","Logo":"logo-prism.png","Web":"http://www.prismlibrary.com/","Content":"# Prism\n\nPrism is a framework for implementing maintainable, extensible, and testable XAML applications on WPF, Xamarin, Windows Store Apps, and Windows 10 UWP apps. Prism helps application developers implement multiple design patterns and principles including Model-View-ViewModel (MVVM), Dependency Injection, Modularity, UI Composition, Commands, and PubSub Events. Prism was first developed by Microsoft patterns \u0026 practices and then transferred to the current Prism open source team in 2015.\n\n# Project Details\n* [Project Info Site](http://prismlibrary.com)\n* [Project Code Site](https://github.com/PrismLibrary/Prism) \n* Project License Type: [Apache](https://github.com/PrismLibrary/Prism/blob/master/LICENSE)\n* Project Main Contact: [Brian Lagunas](http://brianlagunas.com) \n* Project Secondary Contact: [Brian Noyes](http://briannoyes.net/)\n\n### Quicklinks\n\n* [Documentation](https://msdn.microsoft.com/en-us/library/gg406140.aspx)\n* [Discussions](https://github.com/PrismLibrary/Prism/issues)\n* [Contribute](https://github.com/PrismLibrary/Prism#contributing)\n* [Brian Lagunas Twitter](https://twitter.com/brianlagunas)\n* [Brian Noyes Twitter](https://twitter.com/briannoyes)"},{"Title":"System.Drawing (Mono)","Logo":"3687e80c-6ed6-4d55-a70f-424a102f54c9.jpg","Web":"http://www.mono-project.com/","Content":"# System.Drawing (Mono)\n\n[System.Drawing](http://www.mono-project.com/Drawing) is a cross platform open source implementation of Microsoft\u0027s System.Drawing namespace used to draw.\n\n## Project Details\n* [Project Info Site](http://www.mono-project.com/Drawing)\n* [Project Code Site](https://github.com/mono/mono/tree/master/mcs/class/System.Drawing)\n* Project License Type: [MIT](https://github.com/jstedfast/MimeKit/blob/master/License.md)\n\n## Quicklinks\n\n* [Contribute](https://github.com/mono/mono/blob/master/CONTRIBUTING.md)\n* [Documentation](http://docs.go-mono.com/?link=N%3aSystem.Drawing)\n* [Discussions](http://go-mono.com/forums/)"},{"Title":"ReactiveUI","Logo":"e1c841c5-36f1-4f46-935d-00176d7843ca.jpg","Web":"http://reactiveui.net","Content":"# ReactiveUI\n\nReactiveUI is a composable, cross-platform model-view-viewmodel framework for all .NET platforms that is inspired by functional reactive programming which is a paradigm that allows you to express the idea around a feature in one readable place, abstract mutable state away from your user interfaces and improve improve the testability of your application.\n\nIt is the father of the extremely popular \u003Ca href=\u0022https://github.com/ReactiveCocoa/\u0022\u003EReactiveCocoa\u003C/a\u003E framework. Internally the maintainers debate whether ReactiveUI is or is not a framework, as at its core the project is essentially a bunch of extension methods for the \u003Ca href=\u0022https://dotnetfoundation.org/reactive-extensions-for-net\u0022\u003EReactive Extensions\u003C/a\u003E.\n\nWe believe that code is communication between people, that also happens to run on a computer. If you optimise for humans, then over a long time your project will end up better. Software should be understandable by other people; that is super important. We believe that only \u003Ca href=\u0022https://www.youtube.com/watch?v=5DZ8nC0ENdg\u0022 target=\u0022_blank\u0022\u003Ethe power of the Reactive Extensions allows you to express the idea around a feature in one readable place\u003C/a\u003E.\n\nLet\u2019s say you have a text field, and whenever the user types something into it, you want to make a network request which searches for that query. Your designer has requested that this search query automatically execute as the user is typing but your operation team wants guarantees that only one network request is ever in transit and no more frequently than roughly once per second whilst the user is typing.\u003C/p\u003E\n\n\u003Cimg src=\u0022assets/projects/search-autocomplete.gif\u0022 /\u003E\n\n## How would you usually implement this?\n\nMost modern programming today is basically imperative, meaning it models the traditional fetch-execute cycle of a CPU. Perform an instruction, fetch the next one. Perform that one, and so on. For decades, programmers have had to mould their brains to fit the paradigm of the CPU. It\u0027s been like this since the early 1980s.\n\nWhen we rely on hoping that the behavior that emerges from a program is correct, and that reliance is based on nothing more than a programmer\u0027s correctness, then we can easily find ourselves in a sticky situation. We can try and mitigate the costs of imperative programming with things like unit tests or integration tests, but why mitigate the costs when there\u0027s a better way?\n\n## There is a better way\n\nLong ago, when computer programming first came to be, machines had to be programmed quite manually. If the technician entered the correct sequence of machine codes in the correct order, then the resulting program behavior would satisfy the business requirements.  Instead of telling a computer how to do its job, which error-prone and relies too heavily on the infallibility of the programmer, why don\u0027t we just tell it what it\u0027s job is and let it figure the rest out?\n\nReactiveUI is inspired by the paradigm of Functional Reactive Programming, which allows you to model user input as a function that changes over time. This is super cool because it allows you to abstract mutable state away from your user interfaces and express the idea around a feature in one readable place whilst improving application testability. Reactive programming can look scary and complex at first glance, but the best way to describe reactive programming is to think of a spreadsheet:\n\n\u003Cimg src=\u0022assets/projects/frp-excel.gif\u0022 /\u003E\n\n\n\u003Cul\u003E\n    \u003Cli\u003EThree cells, A, B, and C.\u003C/li\u003E\n    \u003Cli\u003EC is defined as the sum of A and B.\u003C/li\u003E\n    \u003Cli\u003EWhenever A or B changes, C reacts to update itself.\u003C/li\u003E\n\u003C/ul\u003E\n\n\u003Cp\u003EThat\u0027s reactive programming: changes propagate throughout a system automatically. Welcome to the peanut butter and jelly of programming paradigms.\u003C/p\u003E\n\n\u003Ciframe width=\u0022100%\u0022 height=\u0022480\u0022 src=\u0022https://www.youtube.com/embed/DYEbUF4xs1Q\u0022 frameborder=\u00220\u0022 allowfullscreen\u003E\u003C/iframe\u003E\n\n# Project Details\n\n* [Website](https://www.reactiveui.net)\n* [Source](https://github.com/reactiveui/reactiveui)\n* License: [MIT](https://github.com/reactiveui/reactiveui/blob/master/LICENSE)\n* [NuGet](https://www.nuget.org/packages/reactiveui)\n* [Project Leads](https://github.com/reactiveui/reactiveui/#core-team)\n\n# Quicklinks\n\n* [Slack](https://reactiveui.net/slack)\n* [Meetup](https://reactiveui.net/meetup)\n* [Contribute](https://reactiveui.net/contribute)\n* [Documentation](https://reactiveui.net/docs)\n* [StackOverflow](https://reactiveui.net/stack-overflow)"},{"Title":"WiX Toolset","Logo":"wix-white.png","Web":"http://wixtoolset.org/","Content":"# WiX Toolset\n\n[WiX Toolset](http://wixtoolset.org/) provides the most powerful set of tools available to create your Windows installation experience.\n\nSeamlessly integrate installation package creation into your development process with text based source code compiled and linked with tasks for MSBuild and Visual Studio integration.\n\n## Project Details\n\n* [Project Info Site](https://wixtoolset.org/)\n* [Project Code Site](https://github.com/wixtoolset)\n* Project License Type: [MS-RL](http://wixtoolset.org/about/license/)\n* Project Main Contacts: [Rob Mensching](http://robmensching.com/) and [Bob Arnson](https://joyofsetup.com/)\n\n## Quicklinks\n\n* [Documentation](http://wixtoolset.org/documentation/)\n* [Discussions and Help](http://wixtoolset.org/documentation/)\n* [Contribute](http://wixtoolset.org/development/)"},{"Title":"Telerik UI for UWP","Logo":"TelerikLogo-300x167.png","Web":"http://www.telerik.com","Content":"# Telerik UI for UWP\n\nTelerik UI for UWP is a rich set of UI controls built to target UWP Windows 10 application development and deliver a unique experience based on the [Microsoft UX guidelines for Windows Runtime apps](https://developer.microsoft.com/en-us/windows/apps/design). It consists of the following components:\n\n* [RadAutoCompleteBox](https://www.telerik.com/universal-windows-platform-ui/autocompletebox)\n* [RadBulletGraph](https://www.telerik.com/universal-windows-platform-ui/bulletgraph)\n* [RadBusyIndicator](https://www.telerik.com/universal-windows-platform-ui/busyindicator)\n* [RadCalendar](https://www.telerik.com/universal-windows-platform-ui/calendar)\n* [RadChart](https://www.telerik.com/universal-windows-platform-ui/chart)\n* [RadDataBoundListBox](https://www.telerik.com/universal-windows-platform-ui/databoundlistbox)\n* [RadDataForm](https://www.telerik.com/universal-windows-platform-ui/dataform)\n* [RadDataGrid](https://www.telerik.com/universal-windows-platform-ui/grid)\n* [RadDatePicker and RadTimePicker](https://www.telerik.com/universal-windows-platform-ui/datepicker-and-timepicker)\n* [RadExpander](https://www.telerik.com/universal-windows-platform-ui/expander)\n* [RadGauge](https://www.telerik.com/universal-windows-platform-ui/gauge)\n* [RadHexView](https://www.telerik.com/universal-windows-platform-ui/hexview)\n* [RadHubTile](https://www.telerik.com/universal-windows-platform-ui/hubtile)\n* [RadListView](https://www.telerik.com/universal-windows-platform-ui/listview)\n* [RadLoopingList](https://www.telerik.com/universal-windows-platform-ui/loopinglist)\n* [RadMap](https://www.telerik.com/universal-windows-platform-ui/map)\n* [RadNumericBox](https://www.telerik.com/universal-windows-platform-ui/numericbox)\n* [RadPagination](https://www.telerik.com/universal-windows-platform-ui/pagination)\n* [RadRadialMenu](https://www.telerik.com/universal-windows-platform-ui/radialmenu)\n* [RadRangeSlider](https://www.telerik.com/universal-windows-platform-ui/rangeslider)\n* [RadRating](https://www.telerik.com/universal-windows-platform-ui/rating)\n* [RadSideDrawer](https://www.telerik.com/universal-windows-platform-ui/sidedrawer)\n\n\n## Project Details\n\n* [Project Info Site](https://www.telerik.com/universal-windows-platform-ui)\n* Project Code Repos:  [UI for UWP](https://github.com/telerik/UI-For-UWP)\n* Project License Type: [Apache 2.0](https://github.com/telerik/UI-For-UWP/blob/master/LICENSE.md)\n* Project Main Contact: [Stefan Stefanov](https://github.com/stefanov-stefan)\n\n## Quicklinks\n* [Contribute](https://github.com/telerik/UI-For-UWP/blob/master/CONTRIBUTING.md)\n* [Discussions](https://github.com/telerik/UI-For-UWP/issues)\n* [Demos](https://www.microsoft.com/en-us/store/p/teleriktelerikuiforuwpexamples/9n3fgcz50qnl) and [Samples](https://github.com/telerik/UI-For-UWP/tree/master/SDKExamples.UWP)\n* [Blog](https://www.telerik.com/blogs/tag/uwp)\n* Twitter: [@Telerik](https://twitter.com/telerik)\n* [Documentation](https://docs.telerik.com/devtools/universal-windows-platform/Introduction-uwp)"},{"Title":"Salesforce Toolkits for .NET","Logo":"salesforce-developer-network-logo_1.png","Web":"https://developer.salesforce.com/","Content":"# Salesforce Toolkits for .NET\n\nThe [Salesforce Toolkits](https://github.com/developerforce/Force.com-Toolkit-for-NET) for .NET provide an easy way for .NET developers to interact with the Force.com \u0026 Chatter REST APIs using native libraries.\n\n## Project Details\n* [Project Info Site](https://github.com/developerforce/Force.com-Toolkit-for-NET) \n* [Project Code Site](https://github.com/developerforce/Force.com-Toolkit-for-NET) \n* Project License Type: [New BSD](https://github.com/developerforce/Force.com-Toolkit-for-NET/blob/master/LICENSE\t\t)\n* Project Main Contact: [Wade Wegner](https://github.com/wadewegner) \n\n## Quicklinks\n\n* [Contribute](https://github.com/developerforce/Force.com-Toolkit-for-NET#contributing-to-the-repository)\n* [Documentation](https://github.com/developerforce/Force.com-Toolkit-for-NET#operations) \n* [Discussions](https://github.com/developerforce/Force.com-Toolkit-for-NET/issues)"},{"Title":"WorldWide Telescope","Logo":"microsoft.jpg","Web":"http://www.microsoft.com","Content":"# WorldWide Telescope\n\nWorldWide Telescope is a visualization environment that enables a computer to function as a virtual telescope \u2014 bringing together archival imagery from the world\u2019s best ground- and space-based telescopes for the exploration of the Universe. WorldWide Telescope blends petabytes of images, information, and stories from multiple sources into a seamless, immersive, rich media experience.  WorldWide Telescope allows simple and direct access to observations of celestial objects and all sky surveys over the full range of the electromagnetic spectrum.  It brings together many impressive archives of celestial objects \u2013 collections painstakingly constructed from observations by such instruments as the Hubble Space Telescope, the Chandra X-Ray Observatory, the Spitzer Space Telescope, the Sloan Digital Sky Survey (SDSS), the Two Micron All Sky Survey (2MASS), Planck, and many others while providing easy integration for other archival data sources as well as observations yet to be made. In addition, it presents a 3D model of the Universe with detailed imagery of planetary surfaces and a representative model of the Milky Way as well as the distribution of galaxies from the Sloan Digital Sky Survey.\n\nThe data in WorldWide Telescope are not only readily accessible; they are presented in a form that facilitates integrative research, thereby helping to bridge the gap between cutting-edge research, education, and public understanding. WorldWide Telescope represents a major step toward the democratization of science, and it has turned the Internet into \u201Cthe world\u00B4s best telescope\u201D \u2014 a veritable supercomputer at your desktop while also enabling most of that functionality in a web client version.\n\n\n## Project Details\n\n* [Project Info Site](http://worldwidetelescope.org)\n* [Project Code Repos](https://github.com/worldwidetelescope)\n* Project License Type: [MIT](https://github.com/WorldWideTelescope/wwt-web-client/blob/master/LICENSE.md)\n* Project Main Contact: [Peter K. G. Williams](https://github.com/pkgw)\n\n## Quicklinks\n* Twitter: [@WWTelescope](https://twitter.com/WWTelescope)"},{"Title":"WCF","Logo":"microsoft.jpg","Web":"http://www.microsoft.com","Content":"# WCF\n\nWCF includes a collection of client-oriented libraries from the Windows Communication Foundation that enable WCF applications built on [.NET Core](https://github.com/dotnet/core) to communicate with WCF services. \n\nThese libraries match the functionality available for the Windows Store profiles, but the use of .NET Core now offers broader reach and the potential for cross-platform WCF applications. They are suitable for mobile devices as well as mid-tier servers communicating with WCF services.\n\n\n## Project Details\n\n* [Project Info Site](https://github.com/dotnet/wcf)\n* [Project Code Site](https://github.com/dotnet/wcf)\n* Project License Type: [MIT](https://github.com/dotnet/wcf/blob/master/LICENSE)\n* Project Main Contact: [Ron Cain](https://github.com/roncain)\n\n## Quicklinks\n* [Contribute](https://github.com/dotnet/wcf/blob/master/CONTRIBUTING.md)\n* [Discussions](https://forums.dotnetfoundation.org/)"},{"Title":"SourceLink","Logo":"logo_big.png","Web":"#","Content":"# SourceLink\n\n Source link support allows source code to be downloaded on demand while debugging. SourceLink is a set of build tools to help create and test for source link support. [Source link support](https://github.com/dotnet/core/blob/master/Documentation/diagnostics/source_link.md) is a developer productivity feature that allows unique information about an assembly\u0027s original source code to be embedded in its PDB during compilation.  \n\n## Project Details\n\n- [Website](https://github.com/ctaggart/SourceLink)\n- [Source](https://github.com/ctaggart/SourceLink)\n- License: [MIT](https://github.com/ctaggart/SourceLink/blob/master/LICENSE)\n- Project Lead: [Cameron Taggart](https://github.com/ctaggart)\n\n## Quicklinks\n\n- [Documentation](https://github.com/ctaggart/SourceLink)\n- [Contributing](https://github.com/ctaggart/SourceLink/wiki/Contributing)"},{"Title":"Windows Phone Toolkit","Logo":"microsoft.jpg","Web":"http://www.microsoft.com","Content":"# Windows Phone Toolkit\n\nStraight from Microsoft Windows Phone developer platform team - [Windows Phone Toolkit](https://phone.codeplex.com/) provides the developer community with new components, functionality, and an efficient way to help shape product development. WPToolkit releases include open source code, samples \u0026 docs, plus design-time support for the Windows Phone platform.\n\n## Project Details\n* [Project Info Site](https://phone.codeplex.com/)\n* [Project Code Site](https://phone.codeplex.com/SourceControl/latest) \n* Project License Type: [Microsoft Public License (Ms-PL)](https://phone.codeplex.com/license)\n* Project Main Contact: [Shawn Oster](https://www.codeplex.com/site/users/view/shawnoster) \n\n## Quicklinks\n\n* [Discussions](https://social.msdn.microsoft.com/Forums/en-us/wpdevelop/threads)"},{"Title":"Steeltoe","Logo":"Pivotal-Logo.png","Web":"https://pivotal.io","Content":"# Steeltoe\n\n[Steeltoe](https://steeltoe.io) is an application framework that provides libraries for .NET Framework and .NET Core developers in order to build cloud-native applications and microservices. Not only does the project bring popular open source project libraries to the .NET world like Netflix Eureka for service discovery, Netflix Hystrix for circuit breaker, Spring Cloud Config for external configuration, and Spring Cloud Connectors for simplifing connections to services, it also provides libraries for security, logging, application management, application health monitoring, distributed tracing, and more. \n\nSteeltoe was contributed to the .NET Foundation by [Pivotal Software, Inc.](https://pivotal.io) and is licensed under the [Apache 2.0](https://opensource.org/licenses/Apache-2.0) license.\n\n## Project Details\n\n* [Website](https://steeltoe.io)\n* [Project Source Code](https://github.com/SteeltoeOSS)\n* License: [Apache 2.0](https://opensource.org/licenses/Apache-2.0)\n* Project Leads: \n  * [Dave Tillman](https://github.com/dtillman)\n  * [Tim Hess](https://github.com/TimHess)\n* Project Contributors:\n  * [Jason Konicki](https://github.com/jkonicki)\n  * [Chris Cheetham](https://github.com/ccheetham) \n  * [Hananiel Sarella](https://github.com/hananiel)\n\n## Quicklinks\n\n* [Documentation](https://steeltoe.io/docs)\n* [Discussions on Slack](https://slack.steeltoe.io) \n* [Project Information](https://github.com/SteeltoeOSS/Home/blob/master/README.md)\n* [Contribute](https://github.com/SteeltoeOSS/Home/blob/master/project-docs/contributing.md)\n* [Blog](https://blog.pivotal.io)"},{"Title":"Windows Presentation Foundation (WPF)","Logo":"microsoft.jpg","Web":"http://www.microsoft.com","Content":"# Windows Presentation Foundation (WPF)\n\n[Windows Presentation Foundation (WPF)](https://github.com/dotnet/wpf) is a UI framework for building Windows desktop applications. \nWPF supports a broad set of application development features, including an application model, resources, controls, graphics, layout, \ndata binding and documents. WPF uses the Extensible Application Markup Language (XAML) to provide a declarative model for application \nprogramming.\n\nWPF applications are based on a vector graphics architecture. This enables applications to look great on high DPI monitors, as they \ncan be infinitely scaled. WPF also includes a flexible hosting model, which makes it straightforward to host a video in a button, \nfor example. The visual designer provided in Visual Studio makes it easy to build WPF application, with drag-in-drop and/or direct \nediting of XAML markup.\n\n# Project Details\n\n* [Project Code Site](https://github.com/dotnet/wpf)\n* Project License Type: [MIT](https://github.com/dotnet/wpf/blob/master/LICENSE.TXT)\n\n### Quicklinks\n\n* [Contribute](https://github.com/dotnet/wpf/blob/master/Documentation/contributing.md)\n* [Roadmap](https://github.com/dotnet/wpf/blob/master/roadmap.md)"},{"Title":"Umbraco","Logo":"umbraco.svg","Web":"http://umbraco.com/","Content":"# Umbraco\n\n[Umbraco](https://umbraco.com/) is a free open source Content Management System built on the ASP.NET platform. It has award-winning integration capabilities and supports ASP.NET MVC or Web Forms, including User and Custom Controls, out of the box. Umbraco is strongly supported by both an active and welcoming community of users around the world, and backed up by a rock-solid commercial organization providing professional support and tools.\n\n## Project Details\n* [Project Info Site](https://umbraco.com/) \n* [Project Code Site](https://github.com/umbraco/Umbraco-CMS) \n* Project License Type: [MIT](https://github.com/umbraco/Umbraco-CMS/blob/7.2.0/LICENSE.md)\n* Project Main Contacts: [Umbraco Team](https://umbraco.com/about-us/team.aspx) \n\n## Quicklinks\n\n* [Documentation](https://our.umbraco.org/documentation) \n* [Discussions and Help](https://our.umbraco.org/forum) \n* [Contribute](https://our.umbraco.org/contribute)"},{"Title":"Xamarin.Auth","Logo":"xamarin.jpg","Web":"https://xamarin.com/","Content":"# Xamarin.Auth\n\n[Xamarin.Auth](https://github.com/xamarin/Xamarin.Auth/blob/master/License.md) is a cross-platform API for authenticating users and storing their accounts.\n\n## Project Details\n* [Project Info Site](https://github.com/xamarin/Xamarin.Auth) \n* [Project Code Site](https://github.com/xamarin/Xamarin.Auth)\n* Project License Type: [Apache License 2.0](https://github.com/xamarin/Xamarin.Auth/blob/master/License.md)\n* Project Main Contact: [Eric Maupin](https://github.com/ermau) \n\n## Quicklinks\n\n* [Documentation](https://github.com/xamarin/Xamarin.Auth/blob/master/GettingStarted.md)\n* [Discussions](https://github.com/xamarin/Xamarin.Auth/issues)"},{"Title":"UWP Community Toolkit","Logo":"microsoft.jpg","Web":"http://www.microsoft.com","Content":"# UWP Community Toolkit\n\nThe [UWP Community Toolkit](https://github.com/Microsoft/UWPCommunityToolkit) is a collection of helper functions, custom controls, and app services. It simplifies and demonstrates common developer tasks building UWP apps for Windows 10.\n\n## Project Details\n\n* [Source](https://github.com/Microsoft/UWPCommunityToolkit)\n* [Sample App](https://aka.ms/uwptoolkitapp)\n* [Getting Started](http://uwpcommunitytoolkit.readthedocs.io/en/master/Getting-Started/)\n* License: [MIT](https://github.com/Microsoft/UWPCommunityToolkit/blob/dev/license.md)\n* Project Leads: [David Catuhe aka Deltakosh](https://github.com/deltakosh)\n\n## Quicklinks\n\n* [Documentation](http://docs.uwpcommunitytoolkit.com/en/master/)\n* Discussions are held on [Github issues](https://github.com/Microsoft/UWPCommunityToolkit/issues)\n* [Contribution guidelines](https://github.com/Microsoft/UWPCommunityToolkit/blob/dev/contributing.md)"},{"Title":"Windows Template Studio","Logo":"microsoft.jpg","Web":"http://www.microsoft.com","Content":"# Windows Template Studio\n\n[Windows Template Studio](https://marketplace.visualstudio.com/items?itemName=WASTeamAccount.WindowsTemplateStudio) is a Visual Studio 2017 Extension that accelerates the creation of new Universal Windows Platform (UWP) apps using a wizard-based experience. The resulting UWP project is well-formed, readable code that incorporates the latest Windows 10 features while implementing proven patterns and best practices. Sprinkled throughout the generated code we have links Docs, Stack Overflow and blogs to provide useful insights.\n\n## Project Details\n\n* [Source](https://github.com/Microsoft/WindowsTemplateStudio/)\n* [Install Visual Studio Extension](https://marketplace.visualstudio.com/items?itemName=WASTeamAccount.WindowsTemplateStudio)\n* [Getting Started](https://github.com/Microsoft/WindowsTemplateStudio/blob/master/docs/getting-started-extension.md)\n* License: [MIT](https://github.com/Microsoft/WindowsTemplateStudio/blob/master/LICENSE.md)\n* Project Leads: [Clint Rutkas](https://github.com/crutkas)\n\n## Quicklinks\n\n* [Documentation](https://github.com/Microsoft/WindowsTemplateStudio/tree/master/docs)\n* Discussions are held on [Github issues](https://github.com/Microsoft/WindowsTemplateStudio/issues)\n* [Contribution guidelines](https://github.com/Microsoft/WindowsTemplateStudio/blob/master/CONTRIBUTING.md)"},{"Title":"Windows Forms","Logo":"microsoft.jpg","Web":"http://www.microsoft.com","Content":"# Windows Forms\n\n[Windows Forms (WinForms)](https://github.com/dotnet/winforms) is a UI framework for building Windows desktop applications. \nIt is a .NET wrapper over Windows user interface libraries, such as User32 and GDI\u002B. It also offers controls and other \nfunctionality that is unique to Windows Forms.\n\nWindows Forms also provides one of the most productive ways to create desktop applications based on the visual designer \nprovided in Visual Studio. It enables drag-and-drop of visual controls and other similar functionality that make it easy to \nbuild desktop applications.\n\n# Project Details\n\n* [Project Code Site](https://github.com/dotnet/winforms)\n* Project License Type: [MIT](https://github.com/dotnet/winforms/blob/master/LICENSE.TXT)\n\n### Quicklinks\n\n* [Contribute](https://github.com/dotnet/winforms/blob/master/Documentation/contributing.md)\n* [Roadmap](https://github.com/dotnet/winforms/blob/master/roadmap.md)"},{"Title":"Xamarin.Mobile","Logo":"xamarin.jpg","Web":"https://xamarin.com/","Content":"# Xamarin.Mobile\n\n[Xamarin.Mobile](https://components.xamarin.com/view/xamarin.mobile) is an API for accessing common platform features, such as reading the user\u0027s address book and using the camera, across iOS, Android, and Windows Phone platforms. The goal of Xamarin.Mobile is to decrease the amount of platform-specific code needed to perform common tasks in multi-platform apps, making development simpler and faster.\n\n## Project Details\n* [Project Info Site](https://github.com/xamarin/Xamarin.Mobile) \n* [Project Code Site](https://github.com/xamarin/Xamarin.Mobile) \n* Project License Type: [Apache License 2.0](https://github.com/xamarin/Xamarin.Mobile/blob/master/LICENSE.md)\n* Project Main Contact: [Eric Maupin](https://github.com/ermau) \n\n## Quicklinks\n\n* [Documentation](https://github.com/xamarin/Xamarin.Mobile/blob/master/GettingStarted.md) \n* [Discussions](https://github.com/xamarin/Xamarin.Mobile/issues)"},{"Title":"xUnit.net","Logo":"4ccf736a-1b4f-47ac-beba-6f518521b752.jpg","Web":"https://xunit.github.io/","Content":"# xUnit.net\n\n[xUnit.net](https://xunit.github.io/) is a free, open source, community-focused unit testing tool for the .NET Framework. Written by the original inventor of NUnit v2, xUnit.net is the latest technology for unit testing C#, F#, VB.NET and other .NET languages. xUnit.net works with ReSharper, CodeRush, TestDriven.NET and Xamarin. It is licensed under [Apache 2](https://opensource.org/licenses/Apache-2.0) (an OSI approved license).\n\n## Project Details\n\n* [Website](https://xunit.github.io)\n* [Source](https://github.com/xunit/xunit)\n* License: [Apache 2.0](https://opensource.org/licenses/Apache-2.0)\n* Project Leads: [James Newkirk](https://github.com/jnewkirk) and [Brad Wilson](https://github.com/bradwilson)\n\n## Quicklinks\n\n* [Documentation](https://xunit.github.io/#documentation)\n* Discussions are held on [Slack](https://xunit.slack.com/). Not a member yet? [Sign up now!](https://xunit-slackin.herokuapp.com/)\n* [Contribute](https://github.com/xunit/xunit/blob/master/CONTRIBUTING.md)"}]